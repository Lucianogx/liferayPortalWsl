"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _dropDown = _interopRequireDefault(require("@clayui/drop-down"));

var _react = _interopRequireDefault(require("react"));

var _Context = _interopRequireDefault(require("./Context"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * SPDX-FileCopyrightText: Â© 2019 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
var ClayAutocompleteDropDown = function ClayAutocompleteDropDown(_ref) {
  var _ref$active = _ref.active,
      active = _ref$active === void 0 ? false : _ref$active,
      alignElementRef = _ref.alignElementRef,
      alignmentByViewport = _ref.alignmentByViewport,
      children = _ref.children,
      closeOnClickOutside = _ref.closeOnClickOutside,
      onActiveChange = _ref.onActiveChange,
      onSetActive = _ref.onSetActive;

  var _React$useContext = _react.default.useContext(_Context.default),
      containerElementRef = _React$useContext.containerElementRef;

  var menuElementRef = _react.default.useRef(null);

  if (!alignElementRef) {
    alignElementRef = containerElementRef;
  }

  var alignElementWidth = alignElementRef.current && alignElementRef.current.clientWidth;
  return /*#__PURE__*/_react.default.createElement(_dropDown.default.Menu, {
    active: active,
    alignElementRef: alignElementRef,
    alignmentByViewport: alignmentByViewport,
    autoBestAlign: !!alignmentByViewport,
    className: "autocomplete-dropdown-menu",
    closeOnClickOutside: closeOnClickOutside,
    onActiveChange: onActiveChange !== null && onActiveChange !== void 0 ? onActiveChange : onSetActive,
    ref: menuElementRef,
    style: {
      maxWidth: 'none',
      width: "".concat(alignElementWidth, "px")
    },
    triggerRef: alignElementRef
  }, children);
};

ClayAutocompleteDropDown.displayName = 'ClayAutocompleteDropDown';
var _default = ClayAutocompleteDropDown;
exports.default = _default;