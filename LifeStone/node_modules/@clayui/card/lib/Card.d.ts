/**
 * SPDX-FileCopyrightText: Â© 2019 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import React from 'react';
import AspectRatio from './AspectRatio';
import Body from './Body';
import Caption from './Caption';
import { IContext } from './Context';
import Description from './Description';
import Group from './Group';
import Row from './Row';
export interface ICardProps extends IContext {
    /**
     * Flag that indicates if `active` class is applied
     */
    active?: boolean;
    /**
     * Determines the style of the card
     */
    displayType?: 'file' | 'image' | 'user';
    /**
     * Flag that indicates if the card can be selectable.
     */
    selectable?: boolean;
}
export interface IProps extends ICardProps, React.BaseHTMLAttributes<HTMLAnchorElement | HTMLSpanElement | HTMLDivElement> {
}
declare function ClayCardHybrid(props: IProps): JSX.Element & {
    AspectRatio: typeof AspectRatio;
    Body: typeof Body;
    Caption: typeof Caption;
    Description: typeof Description;
    Group: typeof Group;
    Row: typeof Row;
};
declare namespace ClayCardHybrid {
    var displayName: string;
    var AspectRatio: ({ children, className, containerAspectRatio, }: import("./AspectRatio").Props) => JSX.Element;
    var Body: ({ children, className, ...otherProps }: React.HTMLAttributes<HTMLDivElement>) => JSX.Element;
    var Caption: ({ children, className, ...otherProps }: React.HTMLAttributes<HTMLDivElement | HTMLSpanElement>) => JSX.Element;
    var Description: ({ children, className, disabled, displayType, href, tag: Tag, truncate, ...otherProps }: import("./Description").ICardDescriptionProps) => JSX.Element;
    var Group: ({ children, className, label, ...otherProps }: import("./Group").ICardGroupProps) => JSX.Element;
    var Row: ({ children, className, ...otherProps }: React.HTMLAttributes<HTMLDivElement>) => JSX.Element;
}
export default ClayCardHybrid;
