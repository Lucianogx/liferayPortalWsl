"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ClayCardNavigation = void 0;

var _link = _interopRequireDefault(require("@clayui/link"));

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _Context = _interopRequireDefault(require("./Context"));

var _excluded = ["children", "className", "horizontal", "href", "onClick"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ClayCardNavigation = function ClayCardNavigation(_ref) {
  var children = _ref.children,
      className = _ref.className,
      horizontal = _ref.horizontal,
      href = _ref.href,
      onClick = _ref.onClick,
      otherProps = _objectWithoutProperties(_ref, _excluded);

  var Container = href ? _link.default : 'div';
  return /*#__PURE__*/_react.default.createElement(_Context.default.Provider, {
    value: {
      horizontal: horizontal,
      interactive: true
    }
  }, /*#__PURE__*/_react.default.createElement(Container, _extends({
    className: (0, _classnames.default)(className, 'card card-interactive card-interactive-primary card-type-template', {
      'template-card': !horizontal,
      'template-card-horizontal': horizontal
    }),
    href: href,
    onClick: onClick,
    role: onClick ? 'button' : undefined
  }, otherProps), children));
};

exports.ClayCardNavigation = ClayCardNavigation;