/**
 * SPDX-FileCopyrightText: Â© 2019 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import { ClayDropDownWithItems } from '@clayui/drop-down';
import ClayLabel from '@clayui/label';
import { IClayStickerProps } from '@clayui/sticker';
import React from 'react';
import type { ButtonWithIconProps } from '@clayui/button';
export interface IProps extends React.BaseHTMLAttributes<HTMLDivElement> {
    /**
     * List of actions in the dropdown menu
     */
    actions?: React.ComponentProps<typeof ClayDropDownWithItems>['items'];
    /**
     * Props to add to the checkbox element
     */
    checkboxProps?: React.HTMLAttributes<HTMLInputElement>;
    /**
     * Description of the file
     */
    description?: React.ReactText;
    /**
     * Flag to indicate that all interactions on the card will be disabled.
     */
    disabled?: boolean;
    /**
     * Determines the style of the card
     */
    displayType?: 'file' | 'image';
    /**
     * Props to add to the dropdown trigger element
     */
    dropDownTriggerProps?: Omit<ButtonWithIconProps, 'symbol' | 'spritemap' | 'displayType' | 'className'>;
    /**
     * Flag to indicate if `aspect-ratio-item-flush` class should be
     * applied to the image.
     */
    flushHorizontal?: boolean;
    /**
     * Flag to indicate if `aspect-ratio-item-vertical-flush` class should be
     * applied to the image.
     */
    flushVertical?: boolean;
    /**
     * Path or URL to file
     */
    href?: string;
    /**
     * Object of props for `<img />` or string path to image
     */
    imgProps?: React.ImgHTMLAttributes<HTMLImageElement> | string;
    /**
     * List of labels that are applied to the file
     */
    labels?: Array<React.ComponentProps<typeof ClayLabel> & {
        value: React.ReactText;
    }>;
    /**
     * Callback for when item is selected
     */
    onSelectChange?: (val: boolean) => void;
    /**
     * Flag to indicate if card is selected
     */
    selected?: boolean;
    /**
     * Path to clay icon spritemap
     */
    spritemap?: string;
    /**
     * Values used in displaying bottom-left icon
     */
    stickerProps?: (IClayStickerProps & {
        content?: React.ReactNode;
    }) | null;
    /**
     * Name of icon
     */
    symbol?: string;
    /**
     * Name of the file
     */
    title: string;
}
export declare const ClayCardWithInfo: ({ actions, checkboxProps, description, disabled, displayType, dropDownTriggerProps, flushHorizontal, flushVertical, href, imgProps, labels, onSelectChange, selected, spritemap, stickerProps, symbol, title, ...otherProps }: IProps) => JSX.Element;
