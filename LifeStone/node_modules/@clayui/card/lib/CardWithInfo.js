"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ClayCardWithInfo = void 0;

var _button = require("@clayui/button");

var _dropDown = require("@clayui/drop-down");

var _form = require("@clayui/form");

var _icon = _interopRequireDefault(require("@clayui/icon"));

var _label = _interopRequireDefault(require("@clayui/label"));

var _layout = _interopRequireDefault(require("@clayui/layout"));

var _sticker = _interopRequireDefault(require("@clayui/sticker"));

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _Card = _interopRequireDefault(require("./Card"));

var _excluded = ["actions", "checkboxProps", "description", "disabled", "displayType", "dropDownTriggerProps", "flushHorizontal", "flushVertical", "href", "imgProps", "labels", "onSelectChange", "selected", "spritemap", "stickerProps", "symbol", "title"],
    _excluded2 = ["value"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ClayCardWithInfo = function ClayCardWithInfo(_ref) {
  var _classNames;

  var actions = _ref.actions,
      _ref$checkboxProps = _ref.checkboxProps,
      checkboxProps = _ref$checkboxProps === void 0 ? {} : _ref$checkboxProps,
      description = _ref.description,
      disabled = _ref.disabled,
      displayType = _ref.displayType,
      _ref$dropDownTriggerP = _ref.dropDownTriggerProps,
      dropDownTriggerProps = _ref$dropDownTriggerP === void 0 ? {
    'aria-label': 'More actions'
  } : _ref$dropDownTriggerP,
      flushHorizontal = _ref.flushHorizontal,
      flushVertical = _ref.flushVertical,
      href = _ref.href,
      imgProps = _ref.imgProps,
      labels = _ref.labels,
      onSelectChange = _ref.onSelectChange,
      _ref$selected = _ref.selected,
      selected = _ref$selected === void 0 ? false : _ref$selected,
      spritemap = _ref.spritemap,
      _ref$stickerProps = _ref.stickerProps,
      stickerProps = _ref$stickerProps === void 0 ? {} : _ref$stickerProps,
      symbol = _ref.symbol,
      title = _ref.title,
      otherProps = _objectWithoutProperties(_ref, _excluded);

  var isCardType = {
    file: displayType === 'file' && !imgProps,
    image: displayType === 'image' || imgProps
  };
  var contentSymbol = symbol ? symbol : isCardType.image ? 'camera' : 'documents-and-media';
  var stickerSymbol = isCardType.image ? 'document-image' : 'document-default';

  var headerContent = /*#__PURE__*/_react.default.createElement(_Card.default.AspectRatio, {
    className: "card-item-first"
  }, !imgProps && /*#__PURE__*/_react.default.createElement("div", {
    className: "aspect-ratio-item aspect-ratio-item-center-middle aspect-ratio-item-fluid card-type-asset-icon"
  }, /*#__PURE__*/_react.default.createElement(_icon.default, {
    spritemap: spritemap,
    symbol: contentSymbol
  })), imgProps && /*#__PURE__*/_react.default.createElement("img", _extends({
    className: (0, _classnames.default)('aspect-ratio-item aspect-ratio-item-center-middle', typeof imgProps !== 'string' && imgProps.className, (_classNames = {}, _defineProperty(_classNames, 'aspect-ratio-item-fluid', !flushHorizontal && !flushVertical), _defineProperty(_classNames, 'aspect-ratio-item-flush', flushHorizontal), _defineProperty(_classNames, 'aspect-ratio-item-vertical-flush', flushVertical), _classNames))
  }, typeof imgProps === 'string' ? {
    src: imgProps
  } : imgProps)), stickerProps && /*#__PURE__*/_react.default.createElement(_sticker.default, _extends({
    displayType: stickerProps.displayType ? stickerProps.displayType : 'primary',
    position: "bottom-left"
  }, stickerProps), stickerProps.children ? stickerProps.children : stickerProps.content ? stickerProps.content : /*#__PURE__*/_react.default.createElement(_icon.default, {
    spritemap: spritemap,
    symbol: stickerSymbol
  })));

  return /*#__PURE__*/_react.default.createElement(_Card.default, _extends({}, otherProps, {
    active: selected,
    displayType: isCardType.image ? 'image' : 'file',
    selectable: !!onSelectChange
  }), onSelectChange && /*#__PURE__*/_react.default.createElement(_form.ClayCheckbox, _extends({}, checkboxProps, {
    checked: selected,
    disabled: disabled,
    onChange: function onChange() {
      return onSelectChange(!selected);
    }
  }), headerContent), !onSelectChange && headerContent, /*#__PURE__*/_react.default.createElement(_Card.default.Body, null, /*#__PURE__*/_react.default.createElement(_Card.default.Row, null, /*#__PURE__*/_react.default.createElement(_layout.default.ContentCol, {
    expand: true
  }, /*#__PURE__*/_react.default.createElement(_Card.default.Description, {
    disabled: disabled,
    displayType: "title",
    href: href
  }, title), description && /*#__PURE__*/_react.default.createElement(_Card.default.Description, {
    displayType: "subtitle"
  }, description), labels && /*#__PURE__*/_react.default.createElement(_Card.default.Caption, null, labels.map(function (_ref2, i) {
    var value = _ref2.value,
        others = _objectWithoutProperties(_ref2, _excluded2);

    return /*#__PURE__*/_react.default.createElement(_label.default, _extends({}, others, {
      key: i
    }), value);
  }))), actions && /*#__PURE__*/_react.default.createElement(_layout.default.ContentCol, null, /*#__PURE__*/_react.default.createElement(_dropDown.ClayDropDownWithItems, {
    items: actions,
    spritemap: spritemap,
    trigger: /*#__PURE__*/_react.default.createElement(_button.ClayButtonWithIcon, _extends({}, dropDownTriggerProps, {
      className: "component-action",
      disabled: disabled,
      displayType: "unstyled",
      spritemap: spritemap,
      symbol: "ellipsis-v"
    }))
  })))));
};

exports.ClayCardWithInfo = ClayCardWithInfo;