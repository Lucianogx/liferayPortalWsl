/**
 * SPDX-FileCopyrightText: Â© 2019 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import { ClayDropDownWithItems } from '@clayui/drop-down';
import { DisplayType as StickerDisplayType } from '@clayui/sticker';
import React from 'react';
import type { ButtonWithIconProps } from '@clayui/button';
export interface IProps extends React.BaseHTMLAttributes<HTMLDivElement> {
    /**
     * List of actions in the dropdown menu
     */
    actions?: React.ComponentProps<typeof ClayDropDownWithItems>['items'];
    /**
     * Props to add to the dropdown trigger element
     */
    checkboxProps?: React.HTMLAttributes<HTMLInputElement>;
    /**
     * Value of the description of the user
     */
    description?: string;
    /**
     * Flag to indicate that all interactions on the card will be disabled.
     */
    disabled?: boolean;
    /**
     * Props to add to the dropdown trigger element
     */
    dropDownTriggerProps?: Omit<ButtonWithIconProps, 'symbol' | 'spritemap' | 'displayType' | 'className'>;
    /**
     * Path or URL to user
     */
    href?: string;
    /**
     * Name of the user
     */
    name: string;
    /**
     * Callback for when item is selected
     */
    onSelectChange?: (val: boolean) => void;
    /**
     * Flag to indicate if card is selected
     */
    selected?: boolean;
    /**
     * Path to clay icon spritemap
     */
    spritemap?: string;
    /**
     * Displays the color of the user icon
     */
    userDisplayType?: StickerDisplayType;
    /**
     * Value for alt attribute for user image
     */
    userImageAlt?: string;
    /**
     * Path to the user's image
     */
    userImageSrc?: string;
    /**
     * Icon name to use for user avatar
     */
    userSymbol?: string;
}
export declare const ClayCardWithUser: ({ actions, checkboxProps, description, disabled, dropDownTriggerProps, href, name, onSelectChange, selected, spritemap, userImageAlt, userDisplayType, userImageSrc, userSymbol, ...otherProps }: IProps) => JSX.Element;
