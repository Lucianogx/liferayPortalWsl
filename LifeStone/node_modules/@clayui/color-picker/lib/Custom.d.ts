/**
 * SPDX-FileCopyrightText: Â© 2019 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
/// <reference types="react" />
import tinycolor from 'tinycolor2';
declare type Props = {
    color: tinycolor.Instance;
    /**
     * List of colors that will display as a color splotch
     * these can be either hex values, color names or
     * css variables.
     */
    colors: Array<string>;
    editorActive: boolean;
    /**
     * Label describing the set of colors provided
     */
    label?: string;
    /**
     * Callback for when a color is changed
     */
    onChange: (color: tinycolor.Instance, value: string) => void;
    /**
     * Callback for when the list of colors is changed
     */
    onColorsChange: (hex: string, index: number) => void;
    onEditorActiveChange: (value: boolean) => void;
    onSplotchChange: (value: number) => void;
    /**
     * Flag for showing and disabling the palette of colors
     */
    showPalette?: boolean;
    splotch?: number;
    /**
     * Path to the location of the spritemap resource.
     */
    spritemap?: string;
};
declare const ClayColorPickerCustom: ({ color, colors, editorActive, label, onChange, onColorsChange, onEditorActiveChange, onSplotchChange, showPalette, splotch, spritemap, }: Props) => JSX.Element;
export default ClayColorPickerCustom;
