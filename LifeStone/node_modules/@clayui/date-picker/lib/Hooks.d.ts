/**
 * SPDX-FileCopyrightText: Â© 2019 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import React from 'react';
import { IDay, Month } from './Helpers';
import { FirstDayOfWeek } from './types';
import type { Input } from '@clayui/time-picker';
/**
 * Handles selected days and stabilize date time when set to avoid problems
 * when the range is used to check intervals.
 */
export declare const useDaysSelected: (defaultDays: () => readonly [Date, Date]) => readonly [readonly [Date, Date], ([start, end]: [Date, Date]) => void];
/**
 * Generates the table of days of the month.
 */
export declare const useWeeks: (currentMonth: Date, firstDayOfWeek: FirstDayOfWeek) => [Month, (value: Date) => void];
/**
 * Sets the current time
 */
export declare const useCurrentTime: (defaultTime: () => string, use12Hours: boolean) => readonly [string, (hours: number | string, minutes: number | string, ampm?: Input['ampm']) => string];
declare type CalendarNavigationProps = {
    daysSelected: readonly [Date, Date];
    isOpen: boolean;
    onChangeMonth: (month: number, year?: number) => void;
    weeks: Month;
};
export declare const useCalendarNavigation: ({ daysSelected, isOpen, onChangeMonth, weeks, }: CalendarNavigationProps) => {
    gridProps: {
        onFocus: (event: React.FocusEvent<HTMLElement>) => void;
        onKeyDown: (event: React.KeyboardEvent<HTMLElement>) => void;
        ref: React.RefObject<HTMLDivElement>;
    };
    isFocused: (day: IDay) => boolean;
};
export {};
