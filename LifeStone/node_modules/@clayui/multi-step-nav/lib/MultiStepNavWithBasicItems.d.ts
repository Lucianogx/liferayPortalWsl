/**
 * SPDX-FileCopyrightText: Â© 2019 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import { InternalDispatch } from '@clayui/shared';
import React from 'react';
import ClayMultiStepNav from './MultiStepNav';
interface ISteps {
    /**
     * Value that is displayed below the step icon.
     */
    subTitle?: string;
    /**
     * Value that is displayed above the step icon.
     */
    title?: string;
}
export interface IProps extends React.ComponentProps<typeof ClayMultiStepNav> {
    /**
     * Value for which step index is active (controlled).
     */
    active?: number;
    /**
     * Value for which step index is active
     * @deprecated since v3.52.0 - use `active` instead.
     */
    activeIndex?: number;
    /**
     * Set the default value of active state (uncontrolled).
     */
    defaultActive?: number;
    /**
     * Determines at what point a dropdown is show. The dropdown will
     * always show as the 2nd to last step.
     */
    maxStepsShown?: number;
    /**
     * Callback for when step is clicked
     */
    onActiveChange?: InternalDispatch<number>;
    /**
     * Callback for when step is clicked
     * @deprecated since v3.52.0 - use `onActiveChange` instead.
     */
    onIndexChange?: InternalDispatch<number>;
    /**
     * Path to spritemap for icon symbol.
     */
    spritemap?: string;
    /**
     * List of steps to display
     */
    steps: Array<ISteps>;
}
export declare const ClayMultiStepNavWithBasicItems: ({ active, activeIndex, defaultActive, maxStepsShown, onActiveChange, onIndexChange, spritemap, steps, ...otherProps }: IProps) => JSX.Element;
export {};
