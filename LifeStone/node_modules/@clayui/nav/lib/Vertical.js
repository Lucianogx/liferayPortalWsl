"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ClayVerticalNav = ClayVerticalNav;

var _icon = _interopRequireDefault(require("@clayui/icon"));

var _shared = require("@clayui/shared");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireWildcard(require("react"));

var _reactTransitionGroup = require("react-transition-group");

var _warning = _interopRequireDefault(require("warning"));

var _Nav = _interopRequireDefault(require("./Nav"));

var _Trigger = _interopRequireDefault(require("./Trigger"));

var _excluded = ["active", "aria-current", "href", "initialExpanded", "items", "label", "level", "onClick", "parentItemRef", "spritemap"],
    _excluded2 = ["activation", "activeLabel", "decorated", "itemAriaCurrent", "items", "large", "spritemap", "trigger", "triggerLabel"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function findSelectedNested(items) {
  return items.find(function (item) {
    if (item.active) {
      return true;
    }

    if (item.items) {
      return findSelectedNested(item.items);
    }

    return false;
  });
}

function Item(_ref) {
  var active = _ref.active,
      _ref$ariaCurrent = _ref['aria-current'],
      ariaCurrent = _ref$ariaCurrent === void 0 ? 'page' : _ref$ariaCurrent,
      href = _ref.href,
      _ref$initialExpanded = _ref.initialExpanded,
      initialExpanded = _ref$initialExpanded === void 0 ? false : _ref$initialExpanded,
      items = _ref.items,
      label = _ref.label,
      level = _ref.level,
      _onClick = _ref.onClick,
      parentItemRef = _ref.parentItemRef,
      spritemap = _ref.spritemap,
      otherProps = _objectWithoutProperties(_ref, _excluded);

  var _React$useState = _react.default.useState(initialExpanded),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      expanded = _React$useState2[0],
      setExpaned = _React$useState2[1];

  var itemRef = (0, _react.useRef)(null);
  var menusRef = (0, _react.useRef)(null);
  var hasItemSelectedNested = (0, _react.useMemo)(function () {
    if (items) {
      return !!findSelectedNested(items);
    }

    return false;
  }, [items]);
  return /*#__PURE__*/_react.default.createElement(_Nav.default.Item, _extends({
    role: "none"
  }, otherProps), /*#__PURE__*/_react.default.createElement(_Nav.default.Link, {
    active: active,
    "aria-current": active ? ariaCurrent !== null && ariaCurrent !== void 0 ? ariaCurrent : undefined : undefined,
    "aria-expanded": items ? expanded : undefined,
    "aria-haspopup": items ? true : undefined,
    collapsed: !expanded,
    href: href,
    onClick: function onClick() {
      setExpaned(!expanded);

      if (_onClick) {
        _onClick();
      }
    },
    onKeyDown: function onKeyDown(event) {
      switch (event.key) {
        case _shared.Keys.Right:
          {
            if (items && !expanded) {
              setExpaned(true);
            } else if (items && menusRef.current) {
              var firstItemElement = menusRef.current.querySelector('.nav-link:not([disabled])');
              firstItemElement === null || firstItemElement === void 0 ? void 0 : firstItemElement.focus();
            }

            break;
          }

        case _shared.Keys.Left:
          {
            if (items && expanded) {
              setExpaned(false);
            } else if (!items && parentItemRef !== null && parentItemRef !== void 0 && parentItemRef.current) {
              var _parentItemRef$curren;

              (_parentItemRef$curren = parentItemRef.current) === null || _parentItemRef$curren === void 0 ? void 0 : _parentItemRef$curren.focus();
            }

            break;
          }

        default:
          break;
      }
    },
    ref: itemRef,
    role: items ? 'button' : 'menuitem',
    showIcon: !!items,
    spritemap: spritemap,
    tabIndex: !active && !(hasItemSelectedNested && items && !expanded) ? -1 : undefined
  }, label), items && /*#__PURE__*/_react.default.createElement(_reactTransitionGroup.CSSTransition, {
    className: expanded ? undefined : 'collapse',
    classNames: {
      enter: 'collapsing',
      enterActive: "show",
      enterDone: 'show',
      exit: "show",
      exitActive: 'collapsing'
    },
    in: expanded,
    onEnter: function onEnter(element) {
      return element.setAttribute('style', "height: 0px");
    },
    onEntering: function onEntering(element) {
      return (0, _shared.setElementFullHeight)(element);
    },
    onExit: function onExit(element) {
      return (0, _shared.setElementFullHeight)(element);
    },
    onExiting: function onExiting(element) {
      return element.setAttribute('style', "height: 0px");
    },
    timeout: 250
  }, /*#__PURE__*/_react.default.createElement("div", {
    ref: menusRef
  }, /*#__PURE__*/_react.default.createElement(_Nav.default, {
    role: "menu",
    stacked: true
  }, renderItems(items, ariaCurrent, spritemap, level++, itemRef)))));
}

function renderItems(items, ariaCurrent, spritemap) {
  var level = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
  var parentItemRef = arguments.length > 4 ? arguments[4] : undefined;
  return items.map(function (item, i) {
    var key = "".concat(level, "-").concat(i);
    return /*#__PURE__*/_react.default.createElement(Item, _extends({}, item, {
      "aria-current": ariaCurrent,
      key: key,
      level: level,
      parentItemRef: parentItemRef,
      spritemap: spritemap
    }));
  });
}

function ClayVerticalNav(_ref2) {
  var _classNames;

  var _ref2$activation = _ref2.activation,
      activation = _ref2$activation === void 0 ? 'manual' : _ref2$activation,
      activeLabel = _ref2.activeLabel,
      decorated = _ref2.decorated,
      _ref2$itemAriaCurrent = _ref2.itemAriaCurrent,
      ariaCurrent = _ref2$itemAriaCurrent === void 0 ? true : _ref2$itemAriaCurrent,
      items = _ref2.items,
      large = _ref2.large,
      spritemap = _ref2.spritemap,
      _ref2$trigger = _ref2.trigger,
      CustomTrigger = _ref2$trigger === void 0 ? _Trigger.default : _ref2$trigger,
      _ref2$triggerLabel = _ref2.triggerLabel,
      triggerLabel = _ref2$triggerLabel === void 0 ? 'Menu' : _ref2$triggerLabel,
      otherProps = _objectWithoutProperties(_ref2, _excluded2);

  var _useState = (0, _react.useState)(false),
      _useState2 = _slicedToArray(_useState, 2),
      active = _useState2[0],
      setActive = _useState2[1];

  var containerRef = (0, _react.useRef)(null);

  var _useNavigation = (0, _shared.useNavigation)({
    activation: activation,
    containerRef: containerRef,
    orientation: 'vertical'
  }),
      navigationProps = _useNavigation.navigationProps;

  "production" !== "production" ? (0, _warning.default)(!activeLabel, 'ClayVerticalNav: The `activeLabel` API has been deprecated in favor of `triggerLabel` and will be removed in the next major release.') : void 0;
  return /*#__PURE__*/_react.default.createElement("nav", _extends({}, otherProps, {
    className: (0, _classnames.default)('menubar menubar-transparent', (_classNames = {}, _defineProperty(_classNames, 'menubar-decorated', decorated), _defineProperty(_classNames, 'menubar-vertical-expand-lg', large), _defineProperty(_classNames, 'menubar-vertical-expand-md', !large), _classNames))
  }), /*#__PURE__*/_react.default.createElement(CustomTrigger, {
    onClick: function onClick() {
      return setActive(!active);
    }
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: "inline-item inline-item-before"
  }, activeLabel || triggerLabel), /*#__PURE__*/_react.default.createElement(_icon.default, {
    focusable: "false",
    role: "presentation",
    spritemap: spritemap,
    symbol: "caret-bottom"
  })), /*#__PURE__*/_react.default.createElement("div", _extends({}, navigationProps, {
    className: (0, _classnames.default)('collapse menubar-collapse', {
      show: active
    }),
    ref: containerRef
  }), /*#__PURE__*/_react.default.createElement(_Nav.default, {
    "aria-orientation": "vertical",
    nested: true,
    role: "menubar"
  }, renderItems(items, ariaCurrent ? 'page' : null, spritemap))));
}

ClayVerticalNav.Trigger = _Trigger.default;