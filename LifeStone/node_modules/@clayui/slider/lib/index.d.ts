/**
 * SPDX-FileCopyrightText: Â© 2019 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import { InternalDispatch } from '@clayui/shared';
import React from 'react';
interface IProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {
    /**
     * Property to set the default value (uncontrolled).
     */
    defaultValue?: number;
    /**
     * Flag that will disable component features.
     */
    disabled?: boolean;
    /**
     * Sets maximum permitted value.
     */
    max?: number;
    /**
     * Sets minimum permitted value
     */
    min?: number;
    /**
     * Callback will always be called when the slider value changes (controlled).
     */
    onChange?: InternalDispatch<number>;
    /**
     * Callback will always be called when the slider value changes.
     * @deprecated since v3.40.0 - use `onChange` instead.
     */
    onValueChange?: InternalDispatch<number>;
    /**
     * Flag to show tooltip or not.
     */
    showTooltip?: boolean;
    /**
     * Sets stepping interval.
     */
    step?: number;
    /**
     * Set tooltip position.
     */
    tooltipPosition?: 'top' | 'bottom';
    /**
     * Set the current value of the slider (controlled).
     */
    value?: number;
}
declare const ClaySlider: ({ className, defaultValue, disabled, max, min, onChange, onValueChange, showTooltip, step, tooltipPosition, value, ...otherProps }: IProps) => JSX.Element;
export default ClaySlider;
