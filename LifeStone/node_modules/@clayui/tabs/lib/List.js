"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.List = void 0;

var _shared = require("@clayui/shared");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireWildcard(require("react"));

var _excluded = ["activation", "active", "children", "className", "displayType", "justified", "modern", "onActiveChange", "shouldUseActive", "tabsId"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var List = /*#__PURE__*/_react.default.forwardRef(function List(_ref, ref) {
  var activation = _ref.activation,
      active = _ref.active,
      children = _ref.children,
      className = _ref.className,
      displayType = _ref.displayType,
      justified = _ref.justified,
      modern = _ref.modern,
      onActiveChange = _ref.onActiveChange,
      _ref$shouldUseActive = _ref.shouldUseActive,
      shouldUseActive = _ref$shouldUseActive === void 0 ? false : _ref$shouldUseActive,
      tabsId = _ref.tabsId,
      otherProps = _objectWithoutProperties(_ref, _excluded);

  var tabsRef = (0, _react.useRef)(null);

  var _useNavigation = (0, _shared.useNavigation)({
    activation: activation,
    containerRef: tabsRef,
    orientation: 'horizontal'
  }),
      navigationProps = _useNavigation.navigationProps;

  (0, _react.useImperativeHandle)(ref, function () {
    return tabsRef.current;
  }, [tabsRef]);
  (0, _react.useEffect)(function () {
    // Internal API to maintain compatibility with the old Tabs pattern and to
    // only update the initial state when the component is in
    // uncontrolled mode.
    if (!shouldUseActive) {
      return;
    }

    var childrenArray = _react.default.Children.toArray(children); // The `active` API in the new pattern has uncontrolled behavior, working
    // just like defaultActive as in the prop declared in the root component.


    for (var index = 0; index < childrenArray.length; index++) {
      var child = childrenArray[index];

      if ( /*#__PURE__*/_react.default.isValidElement(child) && child.props.active) {
        onActiveChange(index);
        break;
      }
    }
  }, []);
  return /*#__PURE__*/_react.default.createElement("ul", _extends({}, otherProps, navigationProps, {
    className: (0, _classnames.default)('nav', {
      'nav-justified': justified
    }, !displayType ? {
      'nav-tabs': !modern,
      'nav-underline': modern
    } : {
      'nav-tabs': displayType === 'basic',
      'nav-underline': displayType === 'underline'
    }, className),
    ref: tabsRef,
    role: "tablist"
  }), _react.default.Children.map(children, function (child, index) {
    var _child$props$innerPro;

    if (! /*#__PURE__*/_react.default.isValidElement(child)) {
      return child;
    }

    return /*#__PURE__*/_react.default.cloneElement(child, {
      active: !shouldUseActive && child.props.active !== undefined ? child.props.active : active === index,
      innerProps: _objectSpread({
        'aria-controls': tabsId && "".concat(tabsId, "-tabpanel-").concat(index),
        id: tabsId && "".concat(tabsId, "-tab-").concat(index)
      }, (_child$props$innerPro = child.props.innerProps) !== null && _child$props$innerPro !== void 0 ? _child$props$innerPro : {}),
      onClick: function onClick(event) {
        var onClick = child.props.onClick;

        if (onClick) {
          onClick(event);
        } else {
          onActiveChange(index);
        }
      }
    });
  }));
});

exports.List = List;
List.displayName = 'ClayTabsList';