"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ALIGN_POSITIONS = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _excluded = ["alignPosition", "children", "className", "show"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ALIGN_POSITIONS = ['top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right', 'left', 'right'];
exports.ALIGN_POSITIONS = ALIGN_POSITIONS;

var ClayTooltip = /*#__PURE__*/_react.default.forwardRef(function (_ref, ref) {
  var _ref$alignPosition = _ref.alignPosition,
      alignPosition = _ref$alignPosition === void 0 ? 'bottom' : _ref$alignPosition,
      children = _ref.children,
      className = _ref.className,
      show = _ref.show,
      otherProps = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/_react.default.createElement("div", _extends({
    className: (0, _classnames.default)(className, 'tooltip', "clay-tooltip-".concat(alignPosition), {
      show: show
    }),
    role: "tooltip"
  }, otherProps, {
    ref: ref
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "arrow"
  }), /*#__PURE__*/_react.default.createElement("div", {
    className: "tooltip-inner"
  }, children));
});

ClayTooltip.displayName = 'ClayTooltip';
var _default = ClayTooltip;
exports.default = _default;