/**
 * SPDX-FileCopyrightText: Â© 2019 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import { IPortalBaseProps } from '@clayui/shared';
import React from 'react';
declare type TContentRenderer = (props: {
    targetNode?: HTMLElement | null;
    title: string;
}) => React.ReactElement | React.ReactNode;
interface IPropsBase {
    /**
     * Flag to indicate if tooltip should automatically align based on the window
     */
    autoAlign?: boolean;
    /**
     * Props to add to the <ClayPortal/>.
     */
    containerProps?: IPortalBaseProps;
    /**
     * Custom function for rendering the contents of the tooltip
     */
    contentRenderer?: TContentRenderer;
    /**
     * Delay in miliseconds before showing tooltip
     */
    delay?: number;
}
interface IPropsWithChildren extends IPropsBase {
    children: React.ReactElement;
    scope?: never;
}
interface IPropsWithScope extends IPropsBase {
    children?: never;
    /**
     * CSS selector to scope provider to. All titles within this scope will be
     * rendered in the tooltip. Titles outside of this scope will be styled
     * as with the default browser.
     */
    scope: string;
}
declare const TooltipProvider: ({ autoAlign, children, containerProps, contentRenderer, delay, scope, }: IPropsWithChildren | IPropsWithScope) => JSX.Element;
export default TooltipProvider;
