/**
 * SPDX-FileCopyrightText: © 2020 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */
/**
 * Tagged template processor for information messages.
 *
 * Example of use:
 *
 * ```ts
 * info`
 *   This is an information message with some ${argument} to show
 * `
 * ```
 *
 * @remarks
 * Error messages are prepended with a '⚙' emoji.
 */
export declare function debug(literals: TemplateStringsArray, ...values: unknown[]): string;
/**
 * Tagged template processor for error messages.
 *
 * Example of use:
 *
 * ```ts
 * fail`
 *   This is an error message with some ${argument} to show
 * `
 * ```
 *
 * @remarks
 * Error messages are prepended with a '❌' emoji.
 */
export declare function fail(literals: TemplateStringsArray, ...values: unknown[]): string;
/**
 * @deprecated use {fail} instead
 */
export declare const error: typeof fail;
/**
 * Tagged template processor for information messages.
 *
 * Example of use:
 *
 * ```ts
 * info`
 *   This is an information message with some ${argument} to show
 * `
 * ```
 *
 * @remarks
 * Error messages are prepended with a 'ℹ️' emoji.
 */
export declare function info(literals: TemplateStringsArray, ...values: unknown[]): string;
/**
 * Print an array of lines separating them with CRs or a single line.
 *
 * It takes care of removing:
 *
 *   * Words inside `||` if `no-decorations` option is set
 *
 * And also decorates (unless `no-decorations` is provided):
 *
 *   * URLs starting with `http(s)://` with underline
 *   * Words inside `{}` with bold
 *
 * Each passed line is processed by the {@link removeJsFormatWhitespace}
 * function.
 */
export declare function print(lines: string | string[], ...rest: string[]): void;
/**
 * Tagged template processor for success messages.
 *
 * Example of use:
 *
 * ```ts
 * success`
 *   This is a success message with some ${argument} to show
 * `
 * ```
 *
 * @remarks
 * Error messages are prepended with a '✔️' emoji.
 */
export declare function success(literals: TemplateStringsArray, ...values: unknown[]): string;
/**
 * Tagged template processor for text messages.
 *
 * Example of use:
 *
 * ```ts
 * text`
 *   This is a text message with some ${argument} to show
 * `
 * ```
 */
export declare function text(literals: TemplateStringsArray, ...values: unknown[]): string;
/**
 * Tagged template processor for question messages.
 *
 * Example of use:
 *
 * ```ts
 * question`
 *   Is this a question message with some ${argument} to show?
 * `
 * ```
 *
 * @remarks
 * Error messages are prepended with a '❓' emoji.
 */
export declare function question(literals: TemplateStringsArray, ...values: unknown[]): string;
/**
 * Tagged template processor for titles.
 *
 * Example of use:
 *
 * ```ts
 * title`
 *   This is a title with some ${argument} to show
 * `
 * ```
 */
export declare function title(literals: TemplateStringsArray, ...values: unknown[]): string;
/**
 * Tagged template processor for warning messages.
 *
 * Example of use:
 *
 * ```ts
 * warn`
 *   This is an warning message with some ${argument} to show
 * `
 * ```
 *
 * @remarks
 * Error messages are prepended with a '⚠️' emoji.
 */
export declare function warn(literals: TemplateStringsArray, ...values: unknown[]): string;
