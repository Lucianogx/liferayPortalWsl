/**
 * SPDX-FileCopyrightText: Â© 2021 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */
import FilePath from '../../file/FilePath';
import LiferayJson from '../../schema/LiferayJson';
import Project from './Project';
declare type BuildType = 'bundler2' | 'customElement';
declare type BuildOptions = Bundler2BuildOptions | CustomElementBuildOptions;
export declare type Bundler2BuildOptions = MinifiableBuildOptions;
export interface CustomElementBuildOptions extends WebpackBuildOptions {
    htmlElementName: string | null;
    portletCategoryName: string;
}
export interface MinifiableBuildOptions {
    minify: boolean;
}
export interface WebpackBuildOptions extends MinifiableBuildOptions {
    externals: {
        [bareIdentifier: string]: string;
    };
}
declare type OptionValue = boolean | number | string;
export default class Build {
    readonly dir: FilePath;
    readonly type: BuildType;
    readonly options: BuildOptions;
    constructor(project: Project, liferayJson: LiferayJson);
    storeOption(name: string, value: OptionValue): void;
    private _toCustomElementBuildOptions;
    private _toBundler2BuildOptions;
    private _toWebpackBuildOptions;
    private _project;
}
export {};
