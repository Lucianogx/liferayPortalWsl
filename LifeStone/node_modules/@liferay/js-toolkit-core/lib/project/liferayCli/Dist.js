"use strict";
/**
 * SPDX-FileCopyrightText: Â© 2021 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const FilePath_1 = __importDefault(require("../../file/FilePath"));
class Dist {
    constructor(project, liferayJson) {
        switch (liferayJson.build.type) {
            case 'bundler2': {
                const { default: bundler2Project,
                /* eslint-disable-next-line @typescript-eslint/no-var-requires */
                 } = require('liferay-npm-build-tools-common/lib/project');
                this.dir = new FilePath_1.default(bundler2Project.jar.outputDir.asNative).resolve();
                this.file = this.dir.join(bundler2Project.jar.outputFilename);
                break;
            }
            case 'customElement':
                this.dir = project.dir.join('dist');
                this.file = this.dir.join(`${project.dir.basename()}.zip`);
                break;
            default:
                throw new Error(`Unknown project build type type: ${liferayJson.build['type']}`);
        }
    }
}
exports.default = Dist;
