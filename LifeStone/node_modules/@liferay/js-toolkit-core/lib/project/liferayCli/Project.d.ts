/**
 * SPDX-FileCopyrightText: Â© 2021 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */
import FilePath from '../../file/FilePath';
import PkgJson from '../../schema/PkgJson';
import Build from './Build';
import Deploy from './Deploy';
import Dist from './Dist';
import Start from './Start';
export default class Project {
    readonly assetsDir: FilePath | null;
    readonly build: Build;
    readonly deploy: Deploy;
    readonly dir: FilePath;
    readonly dist: Dist;
    readonly isWorkspace: boolean;
    readonly mainModuleFile: FilePath;
    readonly pkgJson: PkgJson;
    readonly srcDir: FilePath;
    readonly start: Start;
    constructor(projectPath: string);
    reload(): void;
    /**
     * Requires a module in the context of the project (as opposed to the
     * context of the calling package which would just use a normal `require()`
     * call).
     * @param moduleName
     */
    require(moduleName: string): any;
    /**
     * Resolves a module in the context of the project (as opposed to the
     * context of the calling package which would just use a normal
     * `require.resolve()` call).
     * @param moduleName
     */
    resolve(moduleName: string): string;
    private _getAutopreset;
    private _isWorkspace;
    private _getClientExtensionYamlPath;
    private _loadLiferayJson;
    private _normalizeClientExtensionYaml;
    private _normalizeLiferayJson;
}
