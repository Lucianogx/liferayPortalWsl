"use strict";
/**
 * SPDX-FileCopyrightText: Â© 2020 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const __1 = require("..");
const escapeStringRegExp_1 = __importDefault(require("../../../escapeStringRegExp"));
function replaceInStringLiterals(from, to) {
    return ((source) => _replaceInStringLiterals(source, from, to));
}
exports.default = replaceInStringLiterals;
async function _replaceInStringLiterals(source, from, to) {
    return await (0, __1.replace)(source, {
        enter(node) {
            if (node.type !== 'Literal') {
                return;
            }
            const { value } = node;
            if (typeof value !== 'string') {
                return;
            }
            node.value = value.replace(new RegExp((0, escapeStringRegExp_1.default)(from), 'g'), to);
        },
    });
}
