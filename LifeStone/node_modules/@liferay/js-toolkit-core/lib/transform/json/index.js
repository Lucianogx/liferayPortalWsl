"use strict";
/**
 * SPDX-FileCopyrightText: Â© 2020 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformJsonFile = exports.transformJson = void 0;
const fs_extra_1 = __importDefault(require("fs-extra"));
async function transformJson(json, ...transforms) {
    return await transforms.reduce(async (jsonPromise, transform) => transform(await jsonPromise), Promise.resolve(json));
}
exports.transformJson = transformJson;
/**
 * Transform a JSON file
 *
 * @param fromFile the source file to transform
 * @param toFile the destination file
 * @param transforms the transform functions to apply
 */
async function transformJsonFile(fromFile, toFile, ...transforms) {
    let json = fs_extra_1.default.readJsonSync(fromFile.asNative);
    json = await transformJson(json, ...transforms);
    fs_extra_1.default.ensureDirSync(toFile.dirname().asNative);
    fs_extra_1.default.writeJsonSync(toFile.asNative, json, { spaces: 2 });
}
exports.transformJsonFile = transformJsonFile;
