"use strict";
/**
 * SPDX-FileCopyrightText: Â© 2020 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformTextFile = exports.transformText = void 0;
const fs_extra_1 = __importDefault(require("fs-extra"));
async function transformText(text, ...transforms) {
    return await transforms.reduce(async (sourcePromise, transform) => transform(await sourcePromise), Promise.resolve(text));
}
exports.transformText = transformText;
/**
 * Transform a text file
 *
 * @param fromFile the file to transform
 * @param toFile the destination file
 * @param transforms the transform functions to apply
 */
async function transformTextFile(fromFile, toFile, ...transforms) {
    let text = fs_extra_1.default.readFileSync(fromFile.asNative).toString();
    text = await transformText(text, ...transforms);
    fs_extra_1.default.ensureDirSync(toFile.dirname().asNative);
    fs_extra_1.default.writeFileSync(toFile.asNative, text);
}
exports.transformTextFile = transformTextFile;
