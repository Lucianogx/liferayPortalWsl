"use strict";
/**
 * SPDX-FileCopyrightText: Â© 2021 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const js_toolkit_core_1 = require("@liferay/js-toolkit-core");
const fs_1 = __importDefault(require("fs"));
const abort_1 = __importDefault(require("../util/abort"));
const bundler2_1 = __importDefault(require("./bundler2"));
const customElement_1 = __importDefault(require("./customElement"));
const { print, success } = js_toolkit_core_1.format;
async function build() {
    const project = new js_toolkit_core_1.Project('.');
    fs_1.default.mkdirSync(project.build.dir.asNative, { recursive: true });
    try {
        switch (project.build.type) {
            case 'customElement':
                await (0, customElement_1.default)(project);
                break;
            case 'bundler2':
                await (0, bundler2_1.default)(project);
                break;
            default:
                (0, abort_1.default)(`Unknown project build type: ${project.build.type}`);
                break;
        }
        print(success `{Project successfully built}`);
    }
    catch (error) {
        (0, abort_1.default)(`Build failed!\n${error.stack}`);
    }
}
exports.default = build;
