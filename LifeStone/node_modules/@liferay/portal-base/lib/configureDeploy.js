"use strict";
/**
 * SPDX-FileCopyrightText: Â© 2021 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const js_toolkit_core_1 = require("@liferay/js-toolkit-core");
const fs_1 = __importDefault(require("fs"));
const promptForConfiguration_1 = __importDefault(require("./util/promptForConfiguration"));
const runConfigureWizard_1 = __importDefault(require("./util/runConfigureWizard"));
async function configureDeploy() {
    await (0, runConfigureWizard_1.default)('deploy', async () => {
        var _a;
        const project = new js_toolkit_core_1.Project('.');
        const { dir } = await (0, promptForConfiguration_1.default)([
            {
                default: (_a = project.deploy.dir) === null || _a === void 0 ? void 0 : _a.asPosix.replace(/\/osgi\/modules$/, ''),
                message: 'What is the path to your local Liferay installation?',
                name: 'dir',
                type: 'input',
                validate: (dir) => {
                    const deployDir = new js_toolkit_core_1.FilePath(dir)
                        .join('osgi', 'modules')
                        .resolve();
                    if (!fs_1.default.existsSync(deployDir.asNative)) {
                        return `Invalid answer: ${deployDir.asNative} does not exist`;
                    }
                    return true;
                },
            },
        ]);
        if (dir !== undefined) {
            project.deploy.storeDir(new js_toolkit_core_1.FilePath(dir).join('osgi', 'modules'));
        }
    });
}
exports.default = configureDeploy;
