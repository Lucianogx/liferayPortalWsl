"use strict";
/**
 * SPDX-FileCopyrightText: Â© 2021 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const js_toolkit_core_1 = require("@liferay/js-toolkit-core");
const fs_1 = __importDefault(require("fs"));
const findFiles_1 = __importDefault(require("../util/findFiles"));
const { info, print } = js_toolkit_core_1.format;
function copyAssets(project) {
    if (!project.assetsDir) {
        return;
    }
    const assetFiles = (0, findFiles_1.default)(project.assetsDir, (dirent) => !dirent.name.toLowerCase().endsWith('.scss'));
    if (!assetFiles.length) {
        return;
    }
    print(info `Copying {${assetFiles.length}} assets...`);
    assetFiles.forEach((assetFile) => {
        const outputFile = project.build.dir.join(project.assetsDir.relative(assetFile));
        fs_1.default.mkdirSync(outputFile.dirname().asNative, { recursive: true });
        fs_1.default.writeFileSync(outputFile.asNative, fs_1.default.readFileSync(assetFile.asNative));
    });
}
exports.default = copyAssets;
