"use strict";
/**
 * SPDX-FileCopyrightText: Â© 2021 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: LGPL-3.0-or-later
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const abort_1 = __importDefault(require("../util/abort"));
const findScssFiles_1 = __importDefault(require("./findScssFiles"));
/**
 * @deprecated
 * This function was used to create a remote app manifest.json file that could
 * be used to deploy the client extension but since an equivalent OSGi file
 * exists now, it is not used any more.
 *
 * It should be removed in the future.
 */
function createManifest(project) {
    const options = project.build.options;
    const { htmlElementName, portletCategoryName } = options;
    if (!htmlElementName) {
        (0, abort_1.default)(`
Custom element name is not configured and cannot be inferred from the source code.

Please configure it using {build.options.htmlElementName} in the {liferay.json} file.`);
    }
    const manifest = {
        cssURLs: (0, findScssFiles_1.default)(project).map((file) => project.assetsDir
            .relative(file)
            .toDotRelative()
            .asPosix.replace(/\.scss$/i, '.css')),
        htmlElementName,
        portletCategoryName,
        type: 'customElement',
        urls: [
            project.srcDir.relative(project.mainModuleFile).toDotRelative()
                .asPosix,
        ],
        useESM: true,
    };
    return manifest;
}
exports.default = createManifest;
