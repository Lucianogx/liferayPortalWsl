{"version":3,"sources":["../src/ClayAutocomplete.js"],"names":["ClayAutocomplete","_dropdownItemFocused","_documentClickHandler","dom","on","document","_handleDocumentClick","bind","addListener","_defaultDataChange","_defaultDataLoading","_defaultInputChange","_defaultItemSelected","refs","dataProvider","portal","_handleRenderedPortal","inputFocused","input","focus","removeListener","filteredItems","length","newVal","_isFetching","_query","_getUpdatedFilteredItems","event","data","value","_expanded","dataSource","updateData","regexp","RegExp","allowedCharacters","match","Array","isArray","join","filter","extractData","map","newFilteredItemData","labelLocator","label","_performCall","filteredItem","valueLocator","emit","name","originalEvent","target","element","_handleItemSelected","delegateTarget","getAttribute","index","item","Number","newValue","_getCharactersAllowed","char","substr","inputValue","key","stopPropagation","tagName","preventDefault","_setFocusItem","shiftKey","eventFromInput","alignElement","widthElement","clientWidth","bodyElement","dropdown","_dropdownWidth","_alignedPosition","Align","align","BottomCenter","param","direction","elements","querySelectorAll","ClayComponent","STATE","Config","validator","isValidPosition","internal","number","bool","instanceOf","contentRenderer","string","object","oneOfType","array","func","required","debounceTime","defaultEventHandler","elementClasses","enableAutocomplete","console","warn","elem","id","dataProviderInitialData","dropdownPortalElement","inputElementClasses","inputName","placeholder","pollingInterval","requestInputMode","oneOf","requestOptions","shapeOf","method","mode","cache","credentials","headers","redirect","referrer","body","requestPolling","requestRetries","requestTimeout","unstable_content","any","useDefaultClasses","wrapInput","Soy","register","templates"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;;;;;;;AAEA;;;;IAIMA,gB;;;;;;;;;;;;AACL;;;6BAGW;AACV,QAAKC,oBAAL,GAA4B,IAA5B;;AAEA,QAAKC,qBAAL,GAA6BC,cAAIC,EAAJ,CAC5BC,QAD4B,EAE5B,OAF4B,EAG5B,KAAKC,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAH4B,CAA7B;AAKA,QAAKC,WAAL,CAAiB,YAAjB,EAA+B,KAAKC,kBAApC,EAAwD,IAAxD;AACA,QAAKD,WAAL,CAAiB,aAAjB,EAAgC,KAAKE,mBAArC,EAA0D,IAA1D;AACA,QAAKF,WAAL,CAAiB,aAAjB,EAAgC,KAAKG,mBAArC,EAA0D,IAA1D;AACA,QAAKH,WAAL,CAAiB,cAAjB,EAAiC,KAAKI,oBAAtC,EAA4D,IAA5D;AACA,QAAKC,IAAL,CAAUC,YAAV,CAAuBD,IAAvB,CAA4BE,MAA5B,CAAmCX,EAAnC,CACC,UADD,EAEC,KAAKY,qBAAL,CAA2BT,IAA3B,CAAgC,IAAhC,CAFD;AAIA;;AAED;;;;;;6BAGW;AACV,OAAI,KAAKU,YAAL,KAAsB,IAA1B,EAAgC;AAC/B,SAAKJ,IAAL,CAAUK,KAAV,CAAgBC,KAAhB;AACA;AACD;;AAED;;;;;;6BAGW;AACV,QAAKjB,qBAAL,CAA2BkB,cAA3B;AACA,QAAKnB,oBAAL,GAA4B,IAA5B;AACA;;AAED;;;;;;sCAGoB;AACnB,OAAI,CAAC,KAAKoB,aAAL,CAAmBC,MAAxB,EAAgC;AAC/B,SAAKrB,oBAAL,GAA4B,IAA5B;AACA;AACD;;AAED;;;;;;mCAGiBsB,M,EAAQ;AACxB,OAAIA,WAAW,IAAf,EAAqB;AACpB,SAAKV,IAAL,CAAUK,KAAV,CAAgBC,KAAhB;AACA;AACD;;AAED;;;;;;;uCAIqB;AACpB,QAAKK,WAAL,GAAmB,KAAnB;;AAEA,OAAI,KAAKC,MAAT,EAAiB;AAChB,SAAKJ,aAAL,GAAqB,KAAKK,wBAAL,EAArB;AACA,IAFD,MAEO;AACN,SAAKL,aAAL,GAAqB,EAArB;AACA;AACD;;AAED;;;;;;wCAGsB;AACrB,QAAKG,WAAL,GAAmB,IAAnB;AACA;;AAED;;;;;;;;sCAKoBG,K,EAAO;AAC1B,QAAKF,MAAL,GAAcE,MAAMC,IAAN,CAAWC,KAAzB;;AAEA,QAAKC,SAAL,GAAiB,IAAjB;;AAEA,OAAI,KAAKL,MAAT,EAAiB;AAChB,QAAI,uBAAW,KAAKM,UAAhB,CAAJ,EAAiC;AAChC,UAAKlB,IAAL,CAAUC,YAAV,CAAuBkB,UAAvB,CAAkC,KAAKP,MAAvC;AACA,KAFD,MAEO;AACN,UAAKJ,aAAL,GAAqB,KAAKK,wBAAL,EAArB;AACA;AACD,IAND,MAMO;AACN,SAAKL,aAAL,GAAqB,EAArB;AACA;AACD;;AAED;;;;;;yCAGuB;AACtB,QAAKS,SAAL,GAAiB,KAAjB;AACA;;AAED;;;;;;;;;;wCAOsBD,K,EAAO;AAC5B,OAAMI,SAAS,IAAIC,MAAJ,CAAW,KAAKC,iBAAhB,CAAf;AACA,OAAMC,QAAQP,MAAMO,KAAN,CAAYH,MAAZ,CAAd;;AAEA,UAAOI,MAAMC,OAAN,CAAcF,KAAd,IAAuBA,MAAMG,IAAN,CAAW,EAAX,CAAvB,GAAwC,EAA/C;AACA;;AAED;;;;;;;;6CAK2B;AAAA;;AAC1B,OAAIlB,gBAAgB,KAAKR,IAAL,CAAUC,YAAV,CAAuB0B,MAAvB,CACnB,KAAKf,MADc,EAEnB,KAAKgB,WAFc,CAApB;;AAKApB,iBAAcqB,GAAd,CAAkB,wBAAgB;AACjC,QAAIC,sBAAsB,EAA1B;;AAEA,QAAI,OAAKC,YAAT,EAAuB;AACtBD,yBAAoBE,KAApB,GAA4B,OAAKC,YAAL,CAC3B,OAAKF,YADsB,EAE3BG,aAAanB,IAFc,CAA5B;AAIA;;AAED,QAAI,OAAKoB,YAAT,EAAuB;AACtBL,yBAAoBd,KAApB,GAA4B,OAAKiB,YAAL,CAC3B,OAAKE,YADsB,EAE3BD,aAAanB,IAFc,CAA5B;AAIA;;AAED,QAAI,OAAOmB,aAAanB,IAApB,KAA6B,QAAjC,EAA2C;AAC1CmB,kBAAanB,IAAb,GAAoBe,mBAApB;AACA,KAFD,MAEO;AACNI,kBAAanB,IAAb,CAAkBiB,KAAlB,GAA0BF,oBAAoBE,KAA9C;AACAE,kBAAanB,IAAb,CAAkBC,KAAlB,GAA0Bc,oBAAoBd,KAA9C;AACA;AACD,IAvBD;;AAyBA,UAAOR,aAAP;AACA;;AAED;;;;;;;;;oCAMkBM,K,EAAO;AACxB,UAAO,CAAC,KAAKsB,IAAL,CAAU;AACjBrB,UAAMD,MAAMC,IADK;AAEjBsB,UAAM,YAFW;AAGjBC,mBAAexB;AAHE,IAAV,CAAR;AAKA;;AAED;;;;;;;;;mCAMiBA,K,EAAO;AACvB,UAAO,CAAC,KAAKsB,IAAL,CAAU;AACjBrB,UAAMD,MAAMC,IADK;AAEjBsB,UAAM,WAFW;AAGjBC,mBAAexB;AAHE,IAAV,CAAR;AAKA;;AAED;;;;;;;;;qCAMmBA,K,EAAO;AACzB,UAAO,CAAC,KAAKsB,IAAL,CAAU;AACjBrB,UAAMD,MAAMC,IADK;AAEjBsB,UAAM,aAFW;AAGjBC,mBAAexB;AAHE,IAAV,CAAR;AAKA;;AAED;;;;;;;;uCAKqBA,K,EAAO;AAC3B,OAAIA,MAAMyB,MAAN,KAAiB,KAAKC,OAA1B,EAAmC;AAClC;AACA;AACD,QAAKvB,SAAL,GAAiB,KAAjB;AACA;;AAED;;;;;;;;;2CAMyBH,K,EAAO;AAC/B,UAAO,KAAK2B,mBAAL,CACN3B,KADM,EAENA,MAAM4B,cAAN,CAAqBC,YAArB,CAAkC,0BAAlC,CAFM,CAAP;AAIA;;AAED;;;;;;;;;;sCAOoB7B,K,EAAO8B,K,EAAO;AACjC,OAAMC,OAAO,KAAKrC,aAAL,CAAmBsC,OAAOF,KAAP,CAAnB,CAAb;;AAEA,UAAO,CAAC,KAAKR,IAAL,CAAU;AACjBrB,UAAM;AACL8B,WAAMA,KAAK9B;AADN,KADW;AAIjBsB,UAAM,cAJW;AAKjBC,mBAAexB;AALE,IAAV,CAAR;AAOA;;AAED;;;;;;;;;gCAMcA,K,EAAO;AACpB,UAAO,CAAC,KAAKsB,IAAL,CAAU;AACjBC,UAAM,aADW;AAEjBC,mBAAexB;AAFE,IAAV,CAAR;AAIA;;AAED;;;;;;;;;iCAMeA,K,EAAO;AACrB,UAAO,CAAC,KAAKsB,IAAL,CAAU;AACjBC,UAAM,cADW;AAEjBC,mBAAexB;AAFE,IAAV,CAAR;AAIA;;AAED;;;;;;;;;iCAMeA,K,EAAO;AAAA,OACdE,KADc,GACLF,MAAMyB,MADD,CACdvB,KADc;;AAErB,OAAM+B,WAAW,KAAKzB,iBAAL,GACd,KAAK0B,qBAAL,CAA2BhC,KAA3B,CADc,GAEdA,KAFH;AAGA,OAAMiC,OAAOF,SAASG,MAAT,CAAgB,CAAC,CAAjB,CAAb;;AAEA;AACA;AACA;AACA,QAAKC,UAAL,GAAkBnC,KAAlB;;AAEA,UAAO,CAAC,KAAKoB,IAAL,CAAU;AACjBrB,UAAM;AACLC,YAAO+B,QADF;AAELE;AAFK,KADW;AAKjBZ,UAAM,aALW;AAMjBC,mBAAexB;AANE,IAAV,CAAR;AAQA;;AAED;;;;;;;;;mCAMiBA,K,EAAO;AACvB,WAAQA,MAAMsC,GAAd;AACA,SAAK,OAAL;AACCtC,WAAMuC,eAAN;AACA,SACC,KAAK7C,aAAL,CAAmBC,MAAnB,IACCK,MAAM4B,cAAN,CAAqBY,OAArB,KAAiC,OAFnC,EAGE;AACD,WAAKb,mBAAL,CACC3B,KADD,EAECA,MAAMyB,MAAN,CAAaI,YAAb,CAA0B,0BAA1B,CAFD;AAIA;AACD;;AAED,SAAK,SAAL;AACC7B,WAAMyC,cAAN;AACA,UAAKC,aAAL,CAAmB,IAAnB;AACA;;AAED,SAAK,WAAL;AACC1C,WAAMyC,cAAN;AACAzC,WAAMuC,eAAN;AACA,UAAKG,aAAL,CAAmB,KAAnB;AACA;;AAED,SAAK,KAAL;AACC,SACC,KAAKpD,YAAL,IACC,KAAKI,aADN,IAEC,KAAKA,aAAL,CAAmBC,MAAnB,GAA4B,CAH9B,EAIE;AACDK,YAAMyC,cAAN;AACAzC,YAAMuC,eAAN;AACA,WAAKG,aAAL,CAAmB1C,MAAM2C,QAAzB;AACA;AACD;AAnCD;;AAsCA,UAAO,CAAC,KAAKrB,IAAL,CAAU;AACjBrB,UAAM;AACLyB,cAAS1B,MAAMyB,MADV;AAELvB,YAAO,KAAKhB,IAAL,CAAUK,KAAV,CAAgBW,KAFlB;AAGLoC,UAAKtC,MAAMsC,GAHN;AAILM,qBAAgB5C,MAAM4B,cAAN,CAAqBY,OAArB,KAAiC;AAJ5C,KADW;AAOjBjB,UAAM,gBAPW;AAQjBC,mBAAexB;AARE,IAAV,CAAR;AAUA;;AAED;;;;;;;0CAIwB;AACvB,OAAM6C,eAAe,KAAKnB,OAA1B;;AAEA,OAAImB,YAAJ,EAAkB;AACjB,QAAMC,eAAeD,aAAaE,WAAlC;AACA,QAAMC,cAAc,KAAK9D,IAAL,CAAUC,YAAV,CAAuBD,IAAvB,CAA4BE,MAA5B,CAAmCF,IAAnC,CAClB+D,QADF;;AAGA,SAAKC,cAAL,GAAsBJ,YAAtB;AACA,SAAKK,gBAAL,GAAwBC,qBAAMC,KAAN,CACvBL,WADuB,EAEvBH,YAFuB,EAGvBO,qBAAME,YAHiB,EAIvB,KAJuB,CAAxB;AAMA;AACD;;AAED;;;;;;;;;;+BAOaC,K,EAAOtD,I,EAAM;AACzB,OAAI,OAAOsD,KAAP,KAAiB,UAArB,EAAiC;AAChC,WAAOA,MAAMtD,IAAN,CAAP;AACA;;AAED,OAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC7B,WAAOA,IAAP;AACA;;AAED,UAAOA,KAAKsD,KAAL,CAAP;AACA;;AAED;;;;;;;;gCAKcC,S,EAAW;AACxB,OAAI,KAAK9D,aAAL,CAAmBC,MAAvB,EAA+B;AAAA,QACvBsD,QADuB,GACX,KAAK/D,IAAL,CAAUC,YAAV,CAAuBD,IAAvB,CAA4BE,MAA5B,CAAmCF,IADxB,CACvB+D,QADuB;;AAE9B,QAAMQ,WAAWR,SAASS,gBAAT,CAChB,6BADgB,CAAjB;;AAIA,QAAIF,aAAa,KAAKlF,oBAAL,KAA8B,CAA/C,EAAkD;AACjD,UAAKY,IAAL,CAAUK,KAAV,CAAgBC,KAAhB;AACA,UAAKlB,oBAAL,GAA4B,IAA5B;AACA,KAHD,MAGO,IACN,EAAEkF,cAAc,IAAd,IAAsB,KAAKlF,oBAAL,KAA8B,IAAtD,CADM,EAEL;AACD,UAAKA,oBAAL,GACC,KAAKA,oBAAL,KAA8B,IAA9B,IACAmF,SAAS9D,MAAT,GAAkB,CAAlB,KAAwB,KAAKrB,oBAD7B,GAEGkF,YACC,KAAKlF,oBAAL,GAA4B,CAD7B,GAEC,CAJJ,GAKGkF,YACC,KAAKlF,oBAAL,GAA4B,CAD7B,GAEC,KAAKA,oBAAL,GAA4B,CARjC;;AAUAmF,cAAS,KAAKnF,oBAAd,EAAoCkB,KAApC;AACA;AACD;AACD;;;;EA5a6BmE,uB;;AA+a/B;;;;;;;AAKAtF,iBAAiBuF,KAAjB,GAAyB;AACxB;;;;;;;AAOAT,mBAAkBU,mBAAOC,SAAP,CAAiBV,qBAAMW,eAAvB,EAAwCC,QAAxC,EARM;;AAUxB;;;;;;;AAOAd,iBAAgBW,mBAAOI,MAAP,GAAgBD,QAAhB,EAjBQ;;AAmBxB;;;;;;;;AAQA7D,YAAW0D,mBAAOK,IAAP,GACThE,KADS,CACH,KADG,EAET8D,QAFS,EA3Ba;;AA+BxB;;;;;;;AAOAnE,cAAagE,mBAAOK,IAAP,GACXhE,KADW,CACL,KADK,EAEX8D,QAFW,EAtCW;;AA0CxB;;;;;;;;AAQAxD,oBAAmBqD,mBAAOM,UAAP,CAAkB5D,MAAlB,CAlDK;;AAoDxB;;;;;;;AAOA6D,kBAAiBP,mBAAOQ,MAAP,EA3DO;;AA6DxB;;;;;;;AAOApE,OAAM4D,mBAAOS,MAAP,EApEkB;;AAsExB;;;;;;;;;;;AAWAlE,aAAYyD,mBAAOU,SAAP,CAAiB,CAC5BV,mBAAOW,KAAP,EAD4B,EAE5BX,mBAAOY,IAAP,EAF4B,EAG5BZ,mBAAOS,MAAP,EAH4B,EAI5BT,mBAAOQ,MAAP,EAJ4B,CAAjB,EAKTK,QALS,EAjFY;;AAwFxB;;;;;;;AAOAC,eAAcd,mBAAOI,MAAP,GAAgB/D,KAAhB,CAAsB,GAAtB,CA/FU;;AAiGxB;;;;;;;;AAQA0E,sBAAqBf,mBAAOS,MAAP,EAzGG;;AA2GxB;;;;;;;AAOAO,iBAAgBhB,mBAAOQ,MAAP,EAlHQ;;AAoHxB;;;;;;;AAOAS,qBAAoBjB,mBAAOC,SAAP,CAAiB,iBAAS;AAC7C,MAAI5D,KAAJ,EAAW;AACV6E,WAAQC,IAAR,CACC,4FADD;AAGA;AACD,EANmB,CA3HI;;AAmIxB;;;;;;;AAOAlE,cAAa+C,mBAAOU,SAAP,CAAiB,CAACV,mBAAOY,IAAP,EAAD,EAAgBZ,mBAAOQ,MAAP,EAAhB,CAAjB,EAAmDnE,KAAnD,CACZ;AAAA,SAAQ+E,IAAR;AAAA,EADY,CA1IW;;AA8IxB;;;;;;;AAOAvF,gBAAemE,mBAAOW,KAAP,CAAaX,mBAAOS,MAAP,EAAb,EAA8BpE,KAA9B,CAAoC,EAApC,CArJS;;AAuJxB;;;;;;;AAOAgF,KAAIrB,mBAAOQ,MAAP,EA9JoB;;AAgKxB;;;;;;;AAOAc,0BAAyBtB,mBAAOU,SAAP,CAAiB,CACzCV,mBAAOS,MAAP,EADyC,EAEzCT,mBAAOW,KAAP,EAFyC,CAAjB,CAvKD;;AA4KxBY,wBAAuBvB,mBAAOQ,MAAP,GAAgBnE,KAAhB,CAAsB,uBAAtB,CA5KC;;AA8KxB;;;;;;;AAOAmF,sBAAqBxB,mBAAOQ,MAAP,EArLG;;AAuLxB;;;;;;;AAOA/E,eAAcuE,mBAAOK,IAAP,GAAchE,KAAd,CAAoB,KAApB,CA9LU;;AAgMxB;;;;;;;AAOAoF,YAAWzB,mBAAOQ,MAAP,EAvMa;;AAyMxB;;;;;;;AAOAhC,aAAYwB,mBAAOQ,MAAP,EAhNY;;AAkNxB;;;;;;;AAOApD,eAAc4C,mBAAOU,SAAP,CAAiB,CAACV,mBAAOY,IAAP,EAAD,EAAgBZ,mBAAOQ,MAAP,EAAhB,CAAjB,EAAmDnE,KAAnD,CACb,OADa,CAzNU;;AA6NxB;;;;;;;AAOAqF,cAAa1B,mBAAOQ,MAAP,EApOW;;AAsOxB;;;;;;;AAOAmB,kBAAiB3B,mBAAOI,MAAP,GAAgB/D,KAAhB,CAAsB,CAAtB,CA7OO;;AA+OxB;;;;;;;;AAQAuF,mBAAkB5B,mBAAO6B,KAAP,CAAa,CAAC,SAAD,EAAY,WAAZ,CAAb,EAAuCxF,KAAvC,CAA6C,WAA7C,CAvPM;;AAyPxB;;;;;;;AAOAyF,iBAAgB9B,mBAAO+B,OAAP,CAAe;AAC9BC,UAAQhC,mBAAOQ,MAAP,EADsB;AAE9ByB,QAAMjC,mBAAOQ,MAAP,EAFwB;AAG9B0B,SAAOlC,mBAAOQ,MAAP,EAHuB;AAI9B2B,eAAanC,mBAAOQ,MAAP,EAJiB;AAK9B4B,WAASpC,mBAAOS,MAAP,EALqB;AAM9B4B,YAAUrC,mBAAOQ,MAAP,EANoB;AAO9B8B,YAAUtC,mBAAOQ,MAAP,EAPoB;AAQ9B+B,QAAMvC,mBAAOS,MAAP;AARwB,EAAf,CAhQQ;;AA2QxB;;;;;;;AAOA+B,iBAAgBxC,mBAAOC,SAAP,CAAiB,iBAAS;AACzC,MAAI5D,KAAJ,EAAW;AACV6E,WAAQC,IAAR,CACC,mHADD;AAGA;AACD,EANe,CAlRQ;;AA0RxB;;;;;;;AAOAsB,iBAAgBzC,mBAAOI,MAAP,GAAgB/D,KAAhB,CAAsB,CAAtB,CAjSQ;;AAmSxB;;;;;;;AAOAqG,iBAAgB1C,mBAAOI,MAAP,GAAgB/D,KAAhB,CAAsB,KAAtB,CA1SQ;;AA4SxB;;;;;;;;;AASAsG,mBAAkB3C,mBAAO4C,GAAP,EArTM;;AAuTxB;;;;;;;;AAQAC,oBAAmB7C,mBAAOK,IAAP,GAAchE,KAAd,CAAoB,IAApB,CA/TK;;AAiUxB;;;;;;;AAOAmB,eAAcwC,mBAAOU,SAAP,CAAiB,CAACV,mBAAOY,IAAP,EAAD,EAAgBZ,mBAAOQ,MAAP,EAAhB,CAAjB,EAAmDnE,KAAnD,CACb,OADa,CAxUU;;AA4UxB;;;;;;;;AAQAyG,YAAW9C,mBAAOK,IAAP,GAAchE,KAAd,CAAoB,KAApB;AApVa,CAAzB;;AAuVA,iCAAmB,mBAAnB,EAAwC7B,gBAAxC;;AAEAuI,mBAAIC,QAAJ,CAAaxI,gBAAb,EAA+ByI,6BAA/B;;QAEQzI,gB,GAAAA,gB;kBACOA,gB","file":"ClayAutocomplete.js","sourcesContent":["import 'clay-data-provider';\nimport 'clay-loading-indicator';\nimport 'clay-portal';\nimport {Align} from 'metal-position';\nimport {Config} from 'metal-state';\nimport {dom} from 'metal-dom';\nimport {isFunction} from 'metal';\nimport ClayComponent from 'clay-component';\nimport defineWebComponent from 'metal-web-component';\nimport Soy from 'metal-soy';\n\nimport templates from './ClayAutocomplete.soy.js';\n\n/**\n * Metal ClayAutocomplete component.\n * @extends ClayComponent\n */\nclass ClayAutocomplete extends ClayComponent {\n\t/**\n\t * @inheritDoc\n\t */\n\tattached() {\n\t\tthis._dropdownItemFocused = null;\n\n\t\tthis._documentClickHandler = dom.on(\n\t\t\tdocument,\n\t\t\t'click',\n\t\t\tthis._handleDocumentClick.bind(this)\n\t\t);\n\t\tthis.addListener('dataChange', this._defaultDataChange, true);\n\t\tthis.addListener('dataLoading', this._defaultDataLoading, true);\n\t\tthis.addListener('inputChange', this._defaultInputChange, true);\n\t\tthis.addListener('itemSelected', this._defaultItemSelected, true);\n\t\tthis.refs.dataProvider.refs.portal.on(\n\t\t\t'rendered',\n\t\t\tthis._handleRenderedPortal.bind(this)\n\t\t);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trendered() {\n\t\tif (this.inputFocused === true) {\n\t\t\tthis.refs.input.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposed() {\n\t\tthis._documentClickHandler.removeListener();\n\t\tthis._dropdownItemFocused = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tsyncFilteredItems() {\n\t\tif (!this.filteredItems.length) {\n\t\t\tthis._dropdownItemFocused = null;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tsyncInputFocused(newVal) {\n\t\tif (newVal === true) {\n\t\t\tthis.refs.input.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Sets filtered items with received data\n\t * @private\n\t */\n\t_defaultDataChange() {\n\t\tthis._isFetching = false;\n\n\t\tif (this._query) {\n\t\t\tthis.filteredItems = this._getUpdatedFilteredItems();\n\t\t} else {\n\t\t\tthis.filteredItems = [];\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_defaultDataLoading() {\n\t\tthis._isFetching = true;\n\t}\n\n\t/**\n\t * Filters the items according to received input\n\t * @param {!Event} event\n\t * @private\n\t */\n\t_defaultInputChange(event) {\n\t\tthis._query = event.data.value;\n\n\t\tthis._expanded = true;\n\n\t\tif (this._query) {\n\t\t\tif (isFunction(this.dataSource)) {\n\t\t\t\tthis.refs.dataProvider.updateData(this._query);\n\t\t\t} else {\n\t\t\t\tthis.filteredItems = this._getUpdatedFilteredItems();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.filteredItems = [];\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_defaultItemSelected() {\n\t\tthis._expanded = false;\n\t}\n\n\t/**\n\t * Gets the accepted characters of the input\n\t * element values\n\t * @param {!string} value\n\t * @protected\n\t * @return {string}\n\t */\n\t_getCharactersAllowed(value) {\n\t\tconst regexp = new RegExp(this.allowedCharacters);\n\t\tconst match = value.match(regexp);\n\n\t\treturn Array.isArray(match) ? match.join('') : '';\n\t}\n\n\t/**\n\t * Gets the the udpated filtered items\n\t * @protected\n\t * @return {Array}\n\t */\n\t_getUpdatedFilteredItems() {\n\t\tlet filteredItems = this.refs.dataProvider.filter(\n\t\t\tthis._query,\n\t\t\tthis.extractData\n\t\t);\n\n\t\tfilteredItems.map(filteredItem => {\n\t\t\tlet newFilteredItemData = {};\n\n\t\t\tif (this.labelLocator) {\n\t\t\t\tnewFilteredItemData.label = this._performCall(\n\t\t\t\t\tthis.labelLocator,\n\t\t\t\t\tfilteredItem.data\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (this.valueLocator) {\n\t\t\t\tnewFilteredItemData.value = this._performCall(\n\t\t\t\t\tthis.valueLocator,\n\t\t\t\t\tfilteredItem.data\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof filteredItem.data === 'string') {\n\t\t\t\tfilteredItem.data = newFilteredItemData;\n\t\t\t} else {\n\t\t\t\tfilteredItem.data.label = newFilteredItemData.label;\n\t\t\t\tfilteredItem.data.value = newFilteredItemData.value;\n\t\t\t}\n\t\t});\n\n\t\treturn filteredItems;\n\t}\n\n\t/**\n\t * Continues the propagation of the data change event\n\t * @param {!Event} event\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleDataChange(event) {\n\t\treturn !this.emit({\n\t\t\tdata: event.data,\n\t\t\tname: 'dataChange',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the data error event\n\t * @param {!Event} event\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleDataError(event) {\n\t\treturn !this.emit({\n\t\t\tdata: event.data,\n\t\t\tname: 'dataError',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the data loading event\n\t * @param {!Event} event\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleDataLoading(event) {\n\t\treturn !this.emit({\n\t\t\tdata: event.data,\n\t\t\tname: 'dataLoading',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Handles the dropdown hiding when clicking outside the autocomplete\n\t * component\n\t * @param {!Event} event\n\t */\n\t_handleDocumentClick(event) {\n\t\tif (event.target === this.element) {\n\t\t\treturn;\n\t\t}\n\t\tthis._expanded = false;\n\t}\n\n\t/**\n\t * Continues the propagation of the item clicked event\n\t * @param {!Event} event\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleDropdownItemClick(event) {\n\t\treturn this._handleItemSelected(\n\t\t\tevent,\n\t\t\tevent.delegateTarget.getAttribute('data-dropdown-item-index')\n\t\t);\n\t}\n\n\t/**\n\t * Handle the selected item in the dropdown and trigger the itemSelected event.\n\t * @param {!Event} event\n\t * @param {!string} index\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleItemSelected(event, index) {\n\t\tconst item = this.filteredItems[Number(index)];\n\n\t\treturn !this.emit({\n\t\t\tdata: {\n\t\t\t\titem: item.data,\n\t\t\t},\n\t\t\tname: 'itemSelected',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Handles the input blur event and continues to propagate.\n\t * @param {!Event} event\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleOnBlur(event) {\n\t\treturn !this.emit({\n\t\t\tname: 'inputOnBlur',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Handles the input focus event and continues to propagate.\n\t * @param {!Event} event\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleOnFocus(event) {\n\t\treturn !this.emit({\n\t\t\tname: 'inputOnFocus',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Handles the input event and continues to propagate.\n\t * @param {!Event} event\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleOnInput(event) {\n\t\tconst {value} = event.target;\n\t\tconst newValue = this.allowedCharacters\n\t\t\t? this._getCharactersAllowed(value)\n\t\t\t: value;\n\t\tconst char = newValue.substr(-1);\n\n\t\t// Updates the value of the input with the value\n\t\t// entered by the user in case the validation is false\n\t\t// the above components can update the state of the input value.\n\t\tthis.inputValue = value;\n\n\t\treturn !this.emit({\n\t\t\tdata: {\n\t\t\t\tvalue: newValue,\n\t\t\t\tchar,\n\t\t\t},\n\t\t\tname: 'inputChange',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Handles the onKeydown events and continues to propagate.\n\t * @param {!Event} event\n\t * @protected\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleOnKeydown(event) {\n\t\tswitch (event.key) {\n\t\tcase 'Enter':\n\t\t\tevent.stopPropagation();\n\t\t\tif (\n\t\t\t\tthis.filteredItems.length &&\n\t\t\t\t\tevent.delegateTarget.tagName !== 'INPUT'\n\t\t\t) {\n\t\t\t\tthis._handleItemSelected(\n\t\t\t\t\tevent,\n\t\t\t\t\tevent.target.getAttribute('data-dropdown-item-index')\n\t\t\t\t);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'ArrowUp':\n\t\t\tevent.preventDefault();\n\t\t\tthis._setFocusItem(true);\n\t\t\tbreak;\n\n\t\tcase 'ArrowDown':\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tthis._setFocusItem(false);\n\t\t\tbreak;\n\n\t\tcase 'Tab':\n\t\t\tif (\n\t\t\t\tthis.inputFocused &&\n\t\t\t\t\tthis.filteredItems &&\n\t\t\t\t\tthis.filteredItems.length > 0\n\t\t\t) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tthis._setFocusItem(event.shiftKey);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\n\t\treturn !this.emit({\n\t\t\tdata: {\n\t\t\t\telement: event.target,\n\t\t\t\tvalue: this.refs.input.value,\n\t\t\t\tkey: event.key,\n\t\t\t\teventFromInput: event.delegateTarget.tagName === 'INPUT',\n\t\t\t},\n\t\t\tname: 'inputOnKeydown',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Handle when the lifecycle `rendered` is called in ClayPortal.\n\t * @protected\n\t */\n\t_handleRenderedPortal() {\n\t\tconst alignElement = this.element;\n\n\t\tif (alignElement) {\n\t\t\tconst widthElement = alignElement.clientWidth;\n\t\t\tconst bodyElement = this.refs.dataProvider.refs.portal.refs\n\t\t\t\t.dropdown;\n\n\t\t\tthis._dropdownWidth = widthElement;\n\t\t\tthis._alignedPosition = Align.align(\n\t\t\t\tbodyElement,\n\t\t\t\talignElement,\n\t\t\t\tAlign.BottomCenter,\n\t\t\t\tfalse\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Handles data mapping.\n\t * @param {!(function|string)} param\n\t * @param {!Array} data\n\t * @protected\n\t * @return {!(string|number)}\n\t */\n\t_performCall(param, data) {\n\t\tif (typeof param === 'function') {\n\t\t\treturn param(data);\n\t\t}\n\n\t\tif (typeof data === 'string') {\n\t\t\treturn data;\n\t\t}\n\n\t\treturn data[param];\n\t}\n\n\t/**\n\t * Handle the interactions in the dropdown and add focus on the items.\n\t * @param {!Boolean} direction\n\t * @protected\n\t */\n\t_setFocusItem(direction) {\n\t\tif (this.filteredItems.length) {\n\t\t\tconst {dropdown} = this.refs.dataProvider.refs.portal.refs;\n\t\t\tconst elements = dropdown.querySelectorAll(\n\t\t\t\t'a[data-dropdown-item-index]'\n\t\t\t);\n\n\t\t\tif (direction && this._dropdownItemFocused === 0) {\n\t\t\t\tthis.refs.input.focus();\n\t\t\t\tthis._dropdownItemFocused = null;\n\t\t\t} else if (\n\t\t\t\t!(direction === true && this._dropdownItemFocused === null)\n\t\t\t) {\n\t\t\t\tthis._dropdownItemFocused =\n\t\t\t\t\tthis._dropdownItemFocused === null ||\n\t\t\t\t\telements.length - 1 === this._dropdownItemFocused\n\t\t\t\t\t\t? direction\n\t\t\t\t\t\t\t? this._dropdownItemFocused - 1\n\t\t\t\t\t\t\t: 0\n\t\t\t\t\t\t: direction\n\t\t\t\t\t\t\t? this._dropdownItemFocused - 1\n\t\t\t\t\t\t\t: this._dropdownItemFocused + 1;\n\n\t\t\t\telements[this._dropdownItemFocused].focus();\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * State definition.\n * @static\n * @type {!Object}\n */\nClayAutocomplete.STATE = {\n\t/**\n\t * The current position of the tooltip after being aligned via `Align.align`.\n\t * @default Align.isValidPosition\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {!number}\n\t */\n\t_alignedPosition: Config.validator(Align.isValidPosition).internal(),\n\n\t/**\n\t * Flag to indicate the dropdown width referring to the width of the input.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {!number}\n\t */\n\t_dropdownWidth: Config.number().internal(),\n\n\t/**\n\t * Flag to indicate if dropdown is expanded.\n\t * @default false\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @private\n\t * @type {?bool}\n\t */\n\t_expanded: Config.bool()\n\t\t.value(false)\n\t\t.internal(),\n\n\t/**\n\t * @default false\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @private\n\t * @type {?bool}\n\t */\n\t_isFetching: Config.bool()\n\t\t.value(false)\n\t\t.internal(),\n\n\t/**\n\t * Flag to indicate the characters allowed in the\n\t * input element (e.g /[a-zA-Z0-9_]/g).\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?RegExp}\n\t */\n\tallowedCharacters: Config.instanceOf(RegExp),\n\n\t/**\n\t * Variation name to render different deltemplates.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(string|undefined)}\n\t */\n\tcontentRenderer: Config.string(),\n\n\t/**\n\t * Data to add to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?object}\n\t */\n\tdata: Config.object(),\n\n\t/**\n\t * The array of data items that the data source contains,\n\t * the URL for the data provider to request, or a function\n\t * that receives the query and returns a promise with the\n\t * elements.\n\t *\n\t * @instance\n\t * @default undefined\n\t * @memberof ClayAutocomplete\n\t * @type {!(string|object|array|function)}\n\t */\n\tdataSource: Config.oneOfType([\n\t\tConfig.array(),\n\t\tConfig.func(),\n\t\tConfig.object(),\n\t\tConfig.string(),\n\t]).required(),\n\n\t/**\n\t * Set the request debounce time\n\t * @instance\n\t * @default 200\n\t * @memberof ClayAutocomplete\n\t * @type {?(number)}\n\t */\n\tdebounceTime: Config.number().value(200),\n\n\t/**\n\t * Object that wires events with default listeners\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @review\n\t * @type {?(object|undefined)}\n\t */\n\tdefaultEventHandler: Config.object(),\n\n\t/**\n\t * CSS classes to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(string|undefined)}\n\t */\n\telementClasses: Config.string(),\n\n\t/**\n\t * Flag to enable the filtered items with autocomplete default.\n\t * @default true\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?bool}\n\t */\n\tenableAutocomplete: Config.validator(value => {\n\t\tif (value) {\n\t\t\tconsole.warn(\n\t\t\t\t'🚨 `enableAutocomplete` has been deprecated and will be removed in the next major version.'\n\t\t\t);\n\t\t}\n\t}),\n\n\t/**\n\t * Extracts from the data the item to be compared in autocomplete.\n\t * @instance\n\t * @default (elem) => elem\n\t * @memberof ClayAutocomplete\n\t * @type {?(function|string)}\n\t */\n\textractData: Config.oneOfType([Config.func(), Config.string()]).value(\n\t\telem => elem\n\t),\n\n\t/**\n\t * List of filtered items for suggestion or autocomplete.\n\t * @default []\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?Array<Object>}\n\t */\n\tfilteredItems: Config.array(Config.object()).value([]),\n\n\t/**\n\t * Id to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(string|undefined)}\n\t */\n\tid: Config.string(),\n\n\t/**\n\t * Set some initial data while the first request is being made\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(object|array)}\n\t */\n\tdataProviderInitialData: Config.oneOfType([\n\t\tConfig.object(),\n\t\tConfig.array(),\n\t]),\n\n\tdropdownPortalElement: Config.string().value('#clay_dropdown_portal'),\n\n\t/**\n\t * CSS classes to be applied to the input element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(string|undefined)}\n\t */\n\tinputElementClasses: Config.string(),\n\n\t/**\n\t * Flag to indicate that if the input is focused.\n\t * @instance\n\t * @default false\n\t * @memberof ClayAutocomplete\n\t * @type {?bool}\n\t */\n\tinputFocused: Config.bool().value(false),\n\n\t/**\n\t * Name of the selected items input.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(string|undefined)}\n\t */\n\tinputName: Config.string(),\n\n\t/**\n\t * Value of the input.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(string|undefined)}\n\t */\n\tinputValue: Config.string(),\n\n\t/**\n\t * Sets the name of the field to map the label of the item.\n\t * @default label\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(function|string)}\n\t */\n\tlabelLocator: Config.oneOfType([Config.func(), Config.string()]).value(\n\t\t'label'\n\t),\n\n\t/**\n\t * Input placeholder.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(string|undefined)}\n\t */\n\tplaceholder: Config.string(),\n\n\t/**\n\t * Flag to define how often to refetch data (ms)\n\t * @instance\n\t * @default 0\n\t * @memberof ClayAutocomplete\n\t * @type {?(number|undefined)}\n\t */\n\tpollingInterval: Config.number().value(0),\n\n\t/**\n\t * Specifies explicitly if request needs to be made with debounce\n\t * (userInput) or with polling (polling)\n\t * @instance\n\t * @default undefined\n\t * @memberof ClayAutocomplete\n\t * @type {?(object|array)}\n\t */\n\trequestInputMode: Config.oneOf(['polling', 'userInput']).value('userInput'),\n\n\t/**\n\t * Set ups the request options\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(object|undefined)}\n\t */\n\trequestOptions: Config.shapeOf({\n\t\tmethod: Config.string(),\n\t\tmode: Config.string(),\n\t\tcache: Config.string(),\n\t\tcredentials: Config.string(),\n\t\theaders: Config.object(),\n\t\tredirect: Config.string(),\n\t\treferrer: Config.string(),\n\t\tbody: Config.object(),\n\t}),\n\n\t/**\n\t * Flag to define how often to refetch data (ms)\n\t * @instance\n\t * @default 0\n\t * @memberof ClayAutocomplete\n\t * @type {?(number|undefined)}\n\t */\n\trequestPolling: Config.validator(value => {\n\t\tif (value) {\n\t\t\tconsole.warn(\n\t\t\t\t'🚨 `requestPolling` has been renamed to `pollingInterval` and will be deprecated and removed in the next release.'\n\t\t\t);\n\t\t}\n\t}),\n\n\t/**\n\t * Define how many attempts will be made when the request fails\n\t * @default 5\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(number|undefined)}\n\t */\n\trequestRetries: Config.number().value(5),\n\n\t/**\n\t * Set timeout of the request\n\t * @default 30000\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(number|undefined)}\n\t */\n\trequestTimeout: Config.number().value(30000),\n\n\t/**\n\t * The content renderer.\n\t * Warning: This API is unstable and can be changed at any time,\n\t * use at your own risk.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?html}\n\t */\n\tunstable_content: Config.any(),\n\n\t/**\n\t * Flag to indicate the autocomplete should use default css\n\t * classes or not.\n\t * @default true\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?bool}\n\t */\n\tuseDefaultClasses: Config.bool().value(true),\n\n\t/**\n\t * Sets the name of the field to map the value of the item.\n\t * @default label\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?(function|string)}\n\t */\n\tvalueLocator: Config.oneOfType([Config.func(), Config.string()]).value(\n\t\t'value'\n\t),\n\n\t/**\n\t * Flag to indicate whether to wrap input with the\n\t * `.autofit` utility classes. See the MultiSelect use case.\n\t * @default false\n\t * @instance\n\t * @memberof ClayAutocomplete\n\t * @type {?bool}\n\t */\n\twrapInput: Config.bool().value(false),\n};\n\ndefineWebComponent('clay-autocomplete', ClayAutocomplete);\n\nSoy.register(ClayAutocomplete, templates);\n\nexport {ClayAutocomplete};\nexport default ClayAutocomplete;\n"]}