{"version":3,"sources":["../src/ClayManagementToolbar.js"],"names":["ClayManagementToolbar","event","emit","data","name","originalEvent","_showSearchMobile","defaultCreationMenu","primaryItems","secondaryItems","creationMenu","payload","items","element","delegateTarget","elementIndex","getAttribute","item","actionItems","checked","target","sortingOrder","ClayComponent","STATE","Config","bool","internal","value","actionItemsValidator","active","checkboxStatus","oneOf","clearResultsURL","string","clearSelectionURL","contentRenderer","shapeOf","caption","helpText","maxPrimaryItems","number","maxSecondaryItems","maxTotalItems","creationMenuItemsValidator","viewMoreURL","customData","object","defaultEventHandler","disabled","elementClasses","filterItems","filterItemsValidator","filterLabels","filterLabelsValidator","id","searchActionURL","searchFormMethod","searchFormName","searchInputName","searchInputPlaceholder","searchValue","selectable","selectAllURL","selectedItems","showAdvancedSearch","showCreationMenu","showFiltersDoneButton","showInfoButton","showResultsBar","showSearch","showSelectAllButton","sortingURL","spritemap","required","supportsBulkActions","totalItems","viewTypes","arrayOf","href","icon","label","Soy","register","templates"],"mappings":"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","file":"ClayManagementToolbar.js","sourcesContent":["import './ClayResultsBar';\nimport 'clay-button';\nimport 'clay-checkbox';\nimport 'clay-icon';\nimport 'clay-link';\n/* eslint-disable */\nimport {\n\tClayActionsDropdown,\n\tClayCreationMenuDropdown,\n\tClayDropdownBase,\n} from 'clay-dropdown';\n/* eslint-enable */\nimport {Config} from 'metal-state';\nimport ClayComponent from 'clay-component';\nimport defineWebComponent from 'metal-web-component';\nimport Soy from 'metal-soy';\n\nimport {\n\tactionItemsValidator,\n\tcreationMenuItemsValidator,\n\tfilterItemsValidator,\n\tfilterLabelsValidator,\n} from './validators';\nimport templates from './ClayManagementToolbar.soy.js';\n\n/**\n * Metal ClayManagementToolbar component.\n * @extends ClayComponent\n */\nclass ClayManagementToolbar extends ClayComponent {\n\t/**\n\t * Continues the propagation of the action item clicked event\n\t * @param {!Event} event\n\t * @private\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleActionItemClicked(event) {\n\t\treturn !this.emit({\n\t\t\tdata: event.data,\n\t\t\tname: 'actionItemClicked',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the clear button clicked event\n\t * @param {!Event} event\n\t * @private\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleClearResultsClick(event) {\n\t\treturn !this.emit({\n\t\t\tname: 'clearButtonClicked',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the clear selection button clicked event\n\t * @param {!Event} event\n\t * @private\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleClearSelectionButtonClick(event) {\n\t\treturn !this.emit({\n\t\t\tname: 'clearSelectionButtonClicked',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Hides the search in mobile devices\n\t * @private\n\t */\n\t_handleCloseMobileSearchClick() {\n\t\tthis._showSearchMobile = false;\n\t}\n\n\t/**\n\t * Continues the propagation of the plus button clicked event. This path only\n\t * happens when there's a single primary item. Thus, the data payload associated\n\t * with the event is simply the first primary item.\n\t * @param {!Event} event\n\t * @private\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleCreationButtonClicked(event) {\n\t\tconst defaultCreationMenu = {\n\t\t\tprimaryItems: null,\n\t\t\tsecondaryItems: null,\n\t\t};\n\t\tconst {primaryItems, secondaryItems} =\n\t\t\tthis.creationMenu || defaultCreationMenu;\n\t\tconst payload = primaryItems\n\t\t\t? primaryItems[0]\n\t\t\t: secondaryItems\n\t\t\t\t? secondaryItems[0].items\n\t\t\t\t\t? secondaryItems[0].items[0]\n\t\t\t\t\t: secondaryItems[0]\n\t\t\t\t: null;\n\n\t\treturn !this.emit({\n\t\t\tdata: payload,\n\t\t\tname: 'creationButtonClicked',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the creation menu item clicked event\n\t * @param {!Event} event\n\t * @private\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleCreationMenuItemClicked(event) {\n\t\treturn !this.emit({\n\t\t\tdata: event.data,\n\t\t\tname: 'creationMenuItemClicked',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the creation menu more button clicked event\n\t * @param {!Event} event\n\t * @private\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleCreationMenuMoreButtonClicked(event) {\n\t\treturn !this.emit({\n\t\t\tname: 'creationMenuMoreButtonClicked',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the checkbox changed event\n\t * @param {!Event} event\n\t * @private\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleFilterDoneButtonClick(event) {\n\t\treturn !this.emit({\n\t\t\tname: 'filterDoneClicked',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the filter item click event\n\t * @param {!Event} event\n\t * @private\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleFilterItemClicked(event) {\n\t\treturn !this.emit({\n\t\t\tdata: event.data,\n\t\t\tname: 'filterItemClicked',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the filter label close clicked event\n\t * @param {!Event} event\n\t * @private\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleFilterLabelCloseClicked(event) {\n\t\treturn !this.emit({\n\t\t\tdata: event.data,\n\t\t\tname: 'filterLabelCloseClicked',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the Info button clicked event\n\t * @param {!Event} event\n\t * @private\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleInfoButtonClicked(event) {\n\t\treturn !this.emit({\n\t\t\tname: 'infoButtonClicked',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Shows the search in mobile devices\n\t * @private\n\t */\n\t_handleOpenMobileSearchClick() {\n\t\tthis._showSearchMobile = true;\n\t}\n\n\t/**\n\t * Continues the propagation of the action item clicked event\n\t * @param {!MouseEvent} event\n\t * @private\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleQuickActionClicked(event) {\n\t\tlet element = event.delegateTarget;\n\t\tlet elementIndex = element.getAttribute('data-quick-action-index');\n\t\tlet item = this.actionItems[elementIndex];\n\n\t\treturn !this.emit({\n\t\t\tdata: {\n\t\t\t\titem: item,\n\t\t\t},\n\t\t\tname: 'actionItemClicked',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the search button clicked event\n\t * @param {!Event} event\n\t * @private\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleSearchSearchClick(event) {\n\t\treturn !this.emit({\n\t\t\tname: 'search',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the select all button clicked event\n\t * @param {!Event} event\n\t * @private\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleSelectAllButtonClick(event) {\n\t\treturn !this.emit({\n\t\t\tname: 'selectAllButtonClicked',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the checkbox changed event\n\t * @param {!Event} event\n\t * @private\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleSelectPageCheckboxChanged(event) {\n\t\treturn !this.emit({\n\t\t\tdata: {\n\t\t\t\tchecked: event.target.checked,\n\t\t\t},\n\t\t\tname: 'selectPageCheckboxChanged',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the sorting button clicked event\n\t * @param {!Event} event\n\t * @private\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleSortingButtonClicked(event) {\n\t\treturn !this.emit({\n\t\t\tdata: {\n\t\t\t\tsortingOrder: this.sortingOrder,\n\t\t\t},\n\t\t\tname: 'sortingButtonClicked',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n\n\t/**\n\t * Continues the propagation of the view type item clicked event\n\t * @param {!Event} event\n\t * @private\n\t * @return {Boolean} If the event has been prevented or not.\n\t */\n\t_handleViewTypeClicked(event) {\n\t\treturn !this.emit({\n\t\t\tdata: event.data,\n\t\t\tname: 'viewTypeItemClicked',\n\t\t\toriginalEvent: event,\n\t\t});\n\t}\n}\n\n/**\n * State definition.\n * @static\n * @type {!Object}\n */\nClayManagementToolbar.STATE = {\n\t/**\n\t * Flag to indicate if search should be shown or not. This is for the\n\t * hide/show interaction in small devices.\n\t * @default false\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?bool}\n\t */\n\t_showSearchMobile: Config.bool()\n\t\t.internal()\n\t\t.value(false),\n\n\t/**\n\t * List of items to display in the actions menu on active state.\n\t * @default []\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(array|undefined)}\n\t */\n\tactionItems: actionItemsValidator,\n\n\t/**\n\t * Active status is visible\n\t * @default false\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(boolean|undefined)}\n\t */\n\tactive: Config.bool(),\n\n\t/**\n\t * Satus of the select items checkbox. If checkboxStatus is checked or\n\t * indeterminate the toolbar will be in active state.\n\t * @default unchecked\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(string|undefined)}\n\t */\n\tcheckboxStatus: Config.oneOf([\n\t\t'checked',\n\t\t'indeterminate',\n\t\t'unchecked',\n\t]).value('unchecked'),\n\n\t/**\n\t * Url for clear results link.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(string|undefined)}\n\t */\n\tclearResultsURL: Config.string(),\n\n\t/**\n\t * Url for clear selection link.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(string|undefined)}\n\t */\n\tclearSelectionURL: Config.string(),\n\n\t/**\n\t * Name of the content renderer to use template variants.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(string|undefined)}\n\t */\n\tcontentRenderer: Config.string(),\n\n\t/**\n\t * Configuration of the creation menu.\n\t * Set `true` to render a plain button that will emit an event onclick.\n\t * Set `string` to use it as link href to render a link styled button.\n\t * Set `object` to render a dropdown menu with items.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(object|string|bool|undefined)}\n\t */\n\tcreationMenu: Config.shapeOf({\n\t\tcaption: Config.string(),\n\t\thelpText: Config.string(),\n\t\tmaxPrimaryItems: Config.number(),\n\t\tmaxSecondaryItems: Config.number(),\n\t\tmaxTotalItems: Config.number(),\n\t\tprimaryItems: creationMenuItemsValidator,\n\t\tsecondaryItems: creationMenuItemsValidator,\n\t\tviewMoreURL: Config.string(),\n\t}),\n\n\t/**\n\t * Data that will be passed to deltemplates.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?object}\n\t */\n\tcustomData: Config.object(),\n\n\t/**\n\t * Data to add to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?object}\n\t */\n\tdata: Config.object(),\n\n\t/**\n\t * Object that wires events with default listeners\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @review\n\t * @type {?(object|undefined)}\n\t */\n\tdefaultEventHandler: Config.object(),\n\n\t/**\n\t * Flag to indicate if the management toolbar is disabled or not.\n\t * @default false\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?bool}\n\t */\n\tdisabled: Config.bool().value(false),\n\n\t/**\n\t * CSS classes to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(string|undefined)}\n\t */\n\telementClasses: Config.string(),\n\n\t/**\n\t * List of filter menu items.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(array|undefined)}\n\t */\n\tfilterItems: filterItemsValidator,\n\n\t/**\n\t * List of filter label items.\n\t * @default []\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?array}\n\t */\n\tfilterLabels: filterLabelsValidator.value([]),\n\n\t/**\n\t * Id to be applied to the element.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(string|undefined)}\n\t */\n\tid: Config.string(),\n\n\t/**\n\t * URL of the search form action\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(string|undefined)}\n\t */\n\tsearchActionURL: Config.string(),\n\n\t/**\n\t * Method of the search form.\n\t * @default GET\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(string|undefined)}\n\t */\n\tsearchFormMethod: Config.oneOf(['GET', 'POST']).value('GET'),\n\n\t/**\n\t * Name of the search form.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(string|undefined)}\n\t */\n\tsearchFormName: Config.string(),\n\n\t/**\n\t * Name of the search input.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(string|undefined)}\n\t */\n\tsearchInputName: Config.string(),\n\n\t/**\n\t * Text of the search placeholder.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(string|undefined)}\n\t */\n\tsearchInputPlaceholder: Config.string(),\n\n\t/**\n\t * Value of the search input.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(string|undefined)}\n\t */\n\tsearchValue: Config.string(),\n\n\t/**\n\t * Flag to indicate if the management toolbar will control the selection of\n\t * elements.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(bool|undefined)}\n\t */\n\tselectable: Config.bool().value(false),\n\n\t/**\n\t * Url for select all link.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(string|undefined)}\n\t */\n\tselectAllURL: Config.string(),\n\n\t/**\n\t * Number of selected items.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(number|undefined)}\n\t */\n\tselectedItems: Config.number(),\n\n\t/**\n\t * Flag to indicate if advanced search should be shown or not.\n\t * @default false\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?bool}\n\t */\n\tshowAdvancedSearch: Config.bool().value(false),\n\n\t/**\n\t * Flag to indicate if creation menu button should be shown or not.\n\t * @default true\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?bool}\n\t */\n\tshowCreationMenu: Config.bool().value(true),\n\n\t/**\n\t * Flag to indicate if the `Done` button in filter dropdown should be shown or\n\t * not.\n\t * @default true\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?bool}\n\t */\n\tshowFiltersDoneButton: Config.bool().value(true),\n\n\t/**\n\t * Flag to indicate if the Info button should be shown or not.\n\t * @default false\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?bool}\n\t */\n\tshowInfoButton: Config.bool().value(false),\n\n\t/**\n\t * Flag to indicate if the results bar should be shown or not.\n\t * @default false\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?bool}\n\t */\n\tshowResultsBar: Config.bool().value(false),\n\n\t/**\n\t * Flag to indicate if search should be shown or not.\n\t * @default true\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?bool}\n\t */\n\tshowSearch: Config.bool().value(true),\n\n\t/**\n\t * Flag to indicate if select all button should be shown or not.\n\t * @default false\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?bool}\n\t */\n\tshowSelectAllButton: Config.bool().value(false),\n\n\t/**\n\t * Sorting url.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(string|undefined)}\n\t */\n\tsortingURL: Config.string(),\n\n\t/**\n\t * Sorting order.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(string|undefined)}\n\t */\n\tsortingOrder: Config.oneOf(['asc', 'desc']),\n\n\t/**\n\t * The path to the SVG spritemap file containing the icons.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(string|undefined)}\n\t */\n\tspritemap: Config.string().required(),\n\n\t/**\n\t * Flag to indicate that the toolbar supports bulk selection.\n\t * @default false\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {boolean}\n\t */\n\tsupportsBulkActions: Config.bool().value(false),\n\n\t/**\n\t * Total number of items. If totalItems is 0 most of the elements in the bar\n\t * will appear disabled.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(number|undefined)}\n\t */\n\ttotalItems: Config.number(),\n\n\t/**\n\t * List of view items.\n\t * @default undefined\n\t * @instance\n\t * @memberof ClayManagementToolbar\n\t * @type {?(array|undefined)}\n\t */\n\tviewTypes: Config.arrayOf(\n\t\tConfig.shapeOf({\n\t\t\tactive: Config.bool().value(false),\n\t\t\tdisabled: Config.bool().value(false),\n\t\t\thref: Config.string(),\n\t\t\ticon: Config.string().required(),\n\t\t\tlabel: Config.string().required(),\n\t\t})\n\t),\n};\n\ndefineWebComponent('clay-management-toolbar', ClayManagementToolbar);\n\nSoy.register(ClayManagementToolbar, templates);\n\nexport {ClayManagementToolbar};\nexport default ClayManagementToolbar;\n"]}